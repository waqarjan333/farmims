<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Bulk_dose extends Admin_Controller
{

    function __construct()
    {
        parent::__construct();
        $this->load->model('Bulk_dose_model');
        date_default_timezone_set('Asia/Karachi');
    }
    
    function index()
    {
            $data['animaltypeid'] = $this->Bulk_dose_model->get_animaltype_for_dd();
            $data['_view'] = 'bulkdose/index';

            $this->load->view('layouts/main', $data);
    }
    
    function get_vaccination_list()
    {
        $columns = array(
            0 => 'id',
            1 => 'vaccine_date',
            2 => 'next_vaccine',
            // 3 => 'id'
        );

        // This is for sorting and pagination, it will mstly stay the same
        $limit = $this->input->post('length');
        $start = $this->input->post('start');
        $order = $columns[$this->input->post('order')[0]['column']];
        $dir = $this->input->post('order')[0]['dir'];
        // This is for sorting and pagination, it will mstly stay the same end


        $totalData = $this->Bulk_dose_model->get_all_animals_vaccine_count();

        $totalFiltered = $totalData;

        if (empty($this->input->post('search')['value'])) {
            // echo 'work';exit;
            $posts = $this->Bulk_dose_model->get_all_animals_vaccine($limit, $start, $order, $dir);
        } else {
            $search = $this->input->post('search')['value'];

            $posts =  $this->Bulk_dose_model->get_animals_vaccine_search($limit, $start, $search, $order, $dir);

            $totalFiltered = $this->Bulk_dose_model->get_animals_vaccine_search_count($search);
        }
        // var_dump($posts);exit;
        $data = array();
        if (!empty($posts)) {
            // var_dump($posts);exit;
            foreach ($posts as $post) { 
                if ($post->next_vaccine == null || $post->next_vaccine == "0000-00-00") {
                    $vaccine_btn = "";
                    $next_vccn = "<span class='badge badge-info'>Not Required</span>";
                } else {
                    if ($post->next_taken == 0) {
                        $next_vccn = date('d M,Y', strtotime($post->next_vaccine));
                        $vaccine_btn = "<button class='btn btn-dark btn-sm waves-effect waves-light' data-toggle='modal' data-target='.bs-vaccination-modal-sm' onclick='get_animals_for_vaccine(" . $post->animal_id . ", " . $post->id . ")' ><i class='uil-syringe'></i> Vaccination</button>";
                    } else {
                        $next_vccn = date('d M,Y', strtotime($post->next_vaccine)) . "&nbsp;&nbsp;<span class='badge badge-success'>Vaccinated</span>";
                        $vaccine_btn = "";
                    }
                }

                $nestedData['animal'] = $post->name . " (" . $post->code . ")";
                $nestedData['vaccine'] = $post->vaccine_name;
                $nestedData['uom'] = $post->uom;
                $nestedData['vaccine_date'] = date('d M,Y', strtotime($post->vaccine_date));
                $nestedData['next_vaccine_date'] = $next_vccn;
                $nestedData['actions'] = $vaccine_btn;

                // $nestedData['actions'] = "<button class='btn btn-warning btn-sm waves-effect waves-light'><i class='uil-edit-alt'></i> Edit</button>&nbsp;<button class='btn btn-danger btn-sm waves-effect waves-light'><i class='uil-trash-alt'></i> Delete</button>&nbsp;" . $yeildbtn;

                $data[] = $nestedData;
            }
        }
        // var_dump($data);exit;
        $json_data = array(
            "draw"            => intval($this->input->post('draw')),
            "recordsTotal"    => intval($totalData),
            "recordsFiltered" => intval($totalFiltered),
            "data"            => $data
        );

        echo json_encode($json_data);
    }
    function get_vaccination_list_cattle_managment()
    {
        $columns = array(
            0 => 'id',
            1 => 'vaccine_date',
            2 => 'next_vaccine',
            // 3 => 'id'
        );

        // This is for sorting and pagination, it will mstly stay the same
        $limit = $this->input->post('length');
        $start = $this->input->post('start');
        $order = $columns[$this->input->post('order')[0]['column']];
        $dir = $this->input->post('order')[0]['dir'];
        // This is for sorting and pagination, it will mstly stay the same end


        $totalData = $this->Bulk_dose_model->get_all_fattening_animals_vaccine_count();

        $totalFiltered = $totalData;

        if (empty($this->input->post('search')['value'])) {
            $posts = $this->Bulk_dose_model->get_all_fattening_animals_vaccine($limit, $start, $order, $dir);
        } else {
            $search = $this->input->post('search')['value'];

            $posts =  $this->Bulk_dose_model->get_fattening_animals_vaccine_search($limit, $start, $search, $order, $dir);

            $totalFiltered = $this->Bulk_dose_model->get_fattening_animals_vaccine_search_count($search);
        }
        $data = array();
        if (!empty($posts)) {
            foreach ($posts as $post) {
                if ($post->next_vaccine == null || $post->next_vaccine == "0000-00-00") {
                    $vaccine_btn = "";
                    $next_vccn = "<span class='badge badge-info'>Not Required</span>";
                } else {
                    if ($post->next_taken == 0) {
                        $next_vccn = date('d M,Y', strtotime($post->next_vaccine));
                        $vaccine_btn = "<button class='btn btn-dark btn-sm waves-effect waves-light' data-toggle='modal' data-target='.bs-vaccination-modal-sm_cattle' onclick='get_animals_for_vaccine(" . $post->animal_id . ", " . $post->id . ")' ><i class='uil-syringe'></i> Vaccination</button>";
                    } else {
                        $next_vccn = date('d M,Y', strtotime($post->next_vaccine)) . "&nbsp;&nbsp;<span class='badge badge-success'>Vaccinated</span>";
                        $vaccine_btn = "";
                    }
                }


                $nestedData['animal'] = $post->name . " (" . $post->code . ")";
                $nestedData['vaccine_date'] = date('d M,Y', strtotime($post->vaccine_date));
                $nestedData['next_vaccine_date'] = $next_vccn;
                $nestedData['actions'] = $vaccine_btn;

                $nestedData['animal'] = $post->name . " (" . $post->code . ")";
                $nestedData['vaccine'] = $post->vaccine_name;
                $nestedData['uom'] = $post->uom;
                $nestedData['vaccine_date'] = date('d M,Y', strtotime($post->vaccine_date));
                $nestedData['next_vaccine_date'] = $next_vccn;
                $nestedData['actions'] = $vaccine_btn;

                // $nestedData['actions'] = "<button class='btn btn-warning btn-sm waves-effect waves-light'><i class='uil-edit-alt'></i> Edit</button>&nbsp;<button class='btn btn-danger btn-sm waves-effect waves-light'><i class='uil-trash-alt'></i> Delete</button>&nbsp;" . $yeildbtn;

                $data[] = $nestedData;
            }
        }

        $json_data = array(
            "draw"            => intval($this->input->post('draw')),
            "recordsTotal"    => intval($totalData),
            "recordsFiltered" => intval($totalFiltered),
            "data"            => $data
        );

        echo json_encode($json_data);
    }


    function get_animals_for_vaccine()
    {
       $this->db->select('fattening_animals.id, fattening_animals.name, fattening_animals.code');
        $this->db->where('farm_id', $this->session->userdata('active_farm'));
        // $this->db->where('status !=', DISEASED);
        // echo ($this->session->userdata('active_farm'));exit;
        // $this->db->or_where('status !=', SUSPENDED);
        // Above condition were causing in-correct results
        $this->db->where_not_in('status',[DISEASED,SUSPENDED]);
        $data = $this->db->get('fattening_animals')->result_array();
        // echo "Farm ID ".$this->session->active_farm;
        echo "<option value=''>Select Animal</option>";
        // var_dump($data);exit;
        foreach ($data as $key => $value) {
            echo "<option value='" . $value['id'] . "'>" . $value['name'] . " (" . $value['code'] . ")</option>";
        }
    }

    function get_product_list_for_dd()
    {
        $this->db->where('farm_id', $this->session->userdata('active_farm'));
        $this->db->where('stock_unit >', 0);
        $data = $this->db->get('product')->result_array();
        foreach ($data as $key => $value) {
            echo "<option value='" . $value['id'] . "'>" . $value['product_name'] . "</option>";
        }
    }

    function get_uom()
    {
        $data = $this->db->get('item_uom')->result_array();
        foreach ($data as $key => $value) {
            echo "<option value='" . $value['id'] . "'>" . $value['name'] . "</option>";
        }
    }
   

    function vaccination()
    {
        $this->load->library('form_validation');
        $this->form_validation->set_rules('vaccine_id', 'Vaccine', 'required');
        $this->form_validation->set_rules('dosage_quantity', 'Dosage Quantity', 'required');
        $this->form_validation->set_rules('uom', 'UOM', 'required');
        $this->form_validation->set_rules('vaccine_date', 'Vaccine Date', 'required');
        $this->form_validation->set_rules('booster_dose', 'Booster Dose', 'required');
        
        
        if ($this->form_validation->run()) {
            foreach ($this->input->post('vaccine_animal') as $animal_id) {
                
            
            $params = array(
                
                'animal_id' => $animal_id,
                'farm_id' => $this->session->userdata('active_farm'),
                'vaccine_id' => $this->input->post('vaccine_id'),
                'dosage_quantity' => $this->input->post('dosage_quantity'),
                'uom' => $this->input->post('uom'),
                'vaccine_date' => date('Y-m-d', strtotime($this->input->post('vaccine_date'))),
                'booster_dose' => $this->input->post('booster_dose'),
                'created_by' => $this->session->userdata('id')
            );

            if ($this->input->post('next_vaccine_date')) {
                $params['next_vaccine'] = date('Y-m-d', strtotime($this->input->post('next_vaccine_date')));
            }
            $product = $this->db->get_where('product', array('id' => $this->input->post('vaccine_id')))->row_array();
            $new_qty = array(
                'stock_unit' => $product['stock_unit'] - 1
            );
            $this->db->trans_start();
            if ($this->input->post('table_id')) {
                $vaccine_status = array(
                    'next_taken' => 1
                );
                $this->db->where('id', $this->input->post('table_id'));
                $this->db->update('animal_vaccine', $vaccine_status);
            }

            $this->db->where('id', $product['id']);
            $this->db->update('product', $new_qty);
            $this->db->insert('animal_vaccine', $params);
            $this->db->trans_complete();
              // Acount Journal Table Entry Sttart Here
                     $params1 = array(
                        'acc_number' => '502001',
                        'item_id' =>0,
                        'journal_details' =>'Bulk Animal Vaccination',
                        'journal_amount' =>'900',
                        'type' =>'Vaccine'
                    );
         $this->db->insert('account_journal', $params1);
         $lastJournalID= $this->db->insert_id();
          $updateParam = array(
                        'ref_id' => $lastJournalID
                    );


          $this->db->where('journal_id', $lastJournalID);
         $this->db->update('account_journal', $updateParam);

           $params2 = array(
                        'ref_id' => $lastJournalID,
                        'acc_number' => '105001',
                        'item_id' =>0,
                        'journal_details' =>'Bulk Animal Vaccination',
                        'journal_amount' =>'-900',
                        'type' =>'Vaccine'
                    );
            $this->db->insert('account_journal', $params2);
        // ACCOUNT jOURNAL entry End Here   
        }
            $this->session->set_flashdata('success', 'Animal Vaccinatied Successfuly');
            redirect('bulk_dose');
        } else {
            $data['animaltypeid'] = $this->Bulk_dose_model->get_animaltype_for_dd();
            $data['_view'] = 'bulkdose/index';

            $this->load->view('layouts/main', $data);
        }
    }

    function vaccination_cattle()
    {
        $this->load->library('form_validation');

        $this->form_validation->set_rules('vaccine_id_cattle', 'Vaccine', 'required');
        $this->form_validation->set_rules('dosage_quantity_cattle', 'Dosage Quantity', 'required');
        $this->form_validation->set_rules('uom_cattle', 'UOM', 'required');
        $this->form_validation->set_rules('vaccine_date_cattle', 'Vaccine Date', 'required');
        $this->form_validation->set_rules('booster_dose_cattle', 'Booster Dose', 'required');


        if ($this->form_validation->run()) {
            foreach ($this->input->post('vaccine_animal_cattle') as $animal_id) {
            $params = array(
                'animal_id' => $animal_id,
                'farm_id' => $this->session->userdata('active_farm'),
                'vaccine_id' => $this->input->post('vaccine_id_cattle'),
                'dosage_quantity' => $this->input->post('dosage_quantity_cattle'),
                'uom' => $this->input->post('uom_cattle'),
                'vaccine_date' => date('Y-m-d', strtotime($this->input->post('vaccine_date_cattle'))),
                'booster_dose' => $this->input->post('booster_dose_cattle'),
                'created_by' => $this->session->userdata('id')
            );

            if ($this->input->post('next_vaccine_date_cattle')) {
                $params['next_vaccine'] = date('Y-m-d', strtotime($this->input->post('next_vaccine_date_cattle')));
            }
            $product = $this->db->get_where('product', array('id' => $this->input->post('vaccine_id_cattle')))->row_array();
            $new_qty = array(
                'stock_unit' => $product['stock_unit'] - 1
            );
            $this->db->trans_start();
            if ($this->input->post('table_id')) {
                $vaccine_status = array(
                    'next_taken' => 1
                );
                $this->db->where('id', $this->input->post('table_id'));
                $this->db->update('fattening_animal_vaccine', $vaccine_status);
            }

            $this->db->where('id', $product['id']);
            $this->db->update('product', $new_qty);
            $this->db->insert('fattening_animal_vaccine', $params);
            $this->db->trans_complete();
                 // Acount Journal Table Entry Sttart Here
                     $params1 = array(
                        'acc_number' => '502001',
                        'item_id' =>0,
                        'journal_details' =>'Cattle Management Vaccination',
                        'journal_amount' =>'900',
                        'type' =>'Vaccine'
                    );
         $this->db->insert('account_journal', $params1);
         $lastJournalID= $this->db->insert_id();
          $updateParam = array(
                        'ref_id' => $lastJournalID
                    );


          $this->db->where('journal_id', $lastJournalID);
         $this->db->update('account_journal', $updateParam);

           $params2 = array(
                        'ref_id' => $lastJournalID,
                        'acc_number' => '105001',
                        'item_id' =>0,
                        'journal_details' =>'Cattle Management Vaccination',
                        'journal_amount' =>'-900',
                        'type' =>'Vaccine'
                    );
            $this->db->insert('account_journal', $params2);
        // ACCOUNT jOURNAL entry End Here    
            
        }
        $this->session->set_flashdata('success', 'Fattening Animal Vaccinatied Successfuly');
            redirect('bulk_dose');
        } else {
            $this->load->model('Animaltype_model');
            $this->load->model('Animaltype_model');
            $data['animaltypeid'] = $this->Animaltype_model->get_animaltype_for_dd();
            $data['_view'] = 'bulkdose/index';

            $this->load->view('layouts/main', $data);
        }
    }

    function get_animals_for_vaccine_cattle()
    {
        $this->db->select('fattening_animals.id, fattening_animals.name, fattening_animals.code');
        $this->db->where('farm_id', $this->session->userdata('active_farm'));
        // $this->db->where('status !=', DISEASED);
        // echo ($this->session->userdata('active_farm'));exit;
        // $this->db->or_where('status !=', SUSPENDED);
        // Above condition were causing in-correct results
        $this->db->where_not_in('status',[DISEASED,SUSPENDED]);
        $data = $this->db->get('fattening_animals')->result_array();
        // echo "Farm ID ".$this->session->active_farm;
        echo "<option value=''>Select Animal</option>";
        // var_dump($data);exit;
        foreach ($data as $key => $value) {
            echo "<option value='" . $value['id'] . "'>" . $value['name'] . " (" . $value['code'] . ")</option>";
        }
    }

    function get_product_list_for_dd_cattle()
    {
        $this->db->where('farm_id', $this->session->userdata('active_farm'));
        $this->db->where('stock_unit >', 0);
        $this->db->where('stock_unit >', 0);
        $data = $this->db->get('product')->result_array();
        foreach ($data as $key => $value) {
            echo "<option value='" . $value['id'] . "'>" . $value['product_name'] . "</option>";
        }
    }
    function get_category_list_for_dd_cattle()
    {
        $this->db->like('name','vacc', 'both');
        $this->db->where('status!=',DELETED);
        $data = $this->db->get('product_category')->result_array();
        // print_r($this->db->last_query()); exit;
        $option = "<option value=''>Select Category</option>";
        foreach ($data as $key => $value) {
            $option .=  "<option value='" . $value['id'] . "'>" . $value['name'] . "</option>";
        }
        echo $option;
    }
}
