<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Parties extends Admin_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Parties_model');
        $this->load->model('Country_model');
    }

    function index()
    {  
        $this->load->library('form_validation');
        $this->form_validation->set_rules('name', ' Name', 'required'); 
        $this->form_validation->set_rules('phone', 'phone', 'required');
        // $this->form_validation->set_rules('taxtion', 'taxtion', 'required');
        $this->form_validation->set_rules('type', 'type', 'required');
        $this->form_validation->set_rules('partycatid', 'partycatid', 'required'); 
        $this->form_validation->set_rules('country_id', 'country', 'required');
        $this->form_validation->set_rules('province_id', 'province', 'required');
        $this->form_validation->set_rules('city_id', 'city', 'required');

        if ($this->form_validation->run()) {
            // Left is database column name, right side is value posted from form
            $params = array(
                'partie_name' => $this->input->post('name'),
                'partie_code' => $this->input->post('code'), 
                'partie_phone' => $this->input->post('phone'),
                'taxtion' => $this->input->post('taxtion'),
                'type' => $this->input->post('type'),
                'party_category_id' => $this->input->post('partycatid'), 
                'partie_email' => $this->input->post('email'), 
                'country_id' => $this->input->post('country_id'),
                'province_id' => $this->input->post('province_id'),
                'city_id' => $this->input->post('city_id'), 
                'created_by' => $this->session->userdata('id'),
                'farm_id' => $this->session->userdata('active_farm') 
            );
            $this->Parties_model->add_parties($params);
            $this->session->set_flashdata('success', 'Partner Added Successfuly');
            redirect('parties');
        } else {
            $this->load->model('Country_model');
            $data['countries'] = $this->Country_model->get_all_country_for_dd();
            
            $this->load->model('Partycategory_model');
            $data['partycategory'] = $this->Partycategory_model->get_partycategory_for_dd();
           
            $data['_view'] = 'parties/index';

        $this->load->view('layouts/main',$data);
        }
      
    }

        function get_single_partner()
    {  
        $this->load->library('form_validation');
        $this->form_validation->set_rules('name', ' Name', 'required'); 
        $this->form_validation->set_rules('phone', 'phone', 'required');
        // $this->form_validation->set_rules('taxtion', 'taxtion', 'required');
        $this->form_validation->set_rules('type', 'type', 'required');
        $this->form_validation->set_rules('partycatid', 'partycatid', 'required'); 
        $this->form_validation->set_rules('country_id', 'country', 'required');
        $this->form_validation->set_rules('province_id', 'province', 'required');
        $this->form_validation->set_rules('city_id', 'city', 'required');

        if ($this->form_validation->run()) {
            // Left is database column name, right side is value posted from form
            $params = array(
                'partie_name' => $this->input->post('name'),
                'partie_code' => $this->input->post('code'), 
                'partie_phone' => $this->input->post('phone'),
                'taxtion' => $this->input->post('taxtion'),
                'type' => $this->input->post('type'),
                'party_category_id' => $this->input->post('partycatid'), 
                'partie_email' => $this->input->post('email'), 
                'country_id' => $this->input->post('country_id'),
                'province_id' => $this->input->post('province_id'),
                'city_id' => $this->input->post('city_id'), 
                'created_by' => $this->session->userdata('id'),
                'farm_id' => $this->session->userdata('active_farm') 
            );
            $this->Parties_model->update_party($this->input->post('party_id'), $params);
            $this->session->set_flashdata('success', 'Partner Updated Successfuly');
            redirect('parties');
        } else {
            
            $data['countries'] = $this->Country_model->get_all_country_for_dd();
            $data['party'] = $this->Parties_model->get_party($this->uri->segment(3));
            $data['province'] = $this->Parties_model->get_province($data['party']['country_id']);
            // echo "<pre>";
            // print_r($data['province']);
            $data['city'] = $this->Parties_model->get_cities_by_province($data['party']['province_id']);
            $this->load->model('Partycategory_model');
            $data['partycategory'] = $this->Partycategory_model->get_partycategory_for_dd();
           
            $data['_view'] = 'parties/edit';

        $this->load->view('layouts/main',$data);
        }
      
    }
    function get_province_by_country_id($country_id)
    {
        $this->load->model('Province_model');
        $data = $this->Province_model->province_by_country_id($country_id);
        foreach ($data as $d){
            echo "<option value='".$d['id']."'>".$d['province_name']."</option>";
        }
    }
    function get_list()
    {
        $columns = array(
            0 => 'parties.partie_name',
            1 => 'parties.partie_code',
            2 => 'parties.partie_phone' ,
            3 => 'parties.partie_email' , 
            4 => 'parties.taxtion' ,
            5 => 'parties.type' ,
            6 => 'parties.party_category_id' , 
            7 => 'parties.province_id' ,
            8 => 'parties.city_id' , 
        );

        // This is for sorting and pagination, it will mstly stay the same
        $limit = $this->input->post('length');
        $start = $this->input->post('start');
        $order = $columns[$this->input->post('order')[0]['column']];
        $dir = $this->input->post('order')[0]['dir'];
        // This is for sorting and pagination, it will mstly stay the same end


        $totalData = $this->Parties_model->get_all_parties_count();

        $totalFiltered = $totalData;

        if (empty($this->input->post('search')['value'])) {
            $posts = $this->Parties_model->get_all_parties($limit, $start, $order, $dir);
        } else {
            $search = $this->input->post('search')['value'];

            $posts =  $this->Parties_model->parties_search($limit, $start, $search, $order, $dir);

            $totalFiltered = $this->Parties_model->parties_search_count($search);
        }

        $data = array();
        if (!empty($posts)) {
            foreach ($posts as $post) {
                if($post->type == PARTY_TYPE_CUSTOMER){
                    $partytype = '<span class="badge badge-primary">Customer</span>';
                } else if($post->type == PARTY_TYPE_SUPPLIER){ 
                    $partytype = '<span class="badge badge-warning">Supplier</span>';
                }
                $nestedData['name'] = $post->partie_name;
                $nestedData['code'] = $post->partie_code;
                $nestedData['phone'] = $post->partie_phone; 
                $nestedData['taxtion'] = $post->taxtion;
                $nestedData['type'] = $partytype;
                $nestedData['partycatid'] = $post->category_name;
                $nestedData['email'] = $post->partie_email;
              
                $nestedData['province'] = $post->province_name;
              
                $nestedData['city'] = $post->city_name;
                $nestedData['actions'] = "<a class='btn btn-warning btn-xs' href='parties/get_single_partner/".$post->id."'>Edit</a>&nbsp;<button class='btn btn-danger btn-xs'>Delete</button>";

                $data[] = $nestedData;
            }
        }

        $json_data = array(
            "draw"            => intval($this->input->post('draw')),
            "recordsTotal"    => intval($totalData),
            "recordsFiltered" => intval($totalFiltered),
            "data"            => $data
        );

        echo json_encode($json_data);
    }

    public function edit_country($id)
    {
        # code...
    }

    function get_code(){
        $code = $this->db->query("SELECT MAX(id)+1 AS NEXT_ID FROM parties;")->row()->NEXT_ID;
        // Zero Fill Code
        $code = sprintf("%05d", $code);
        echo $code;
    }
}
