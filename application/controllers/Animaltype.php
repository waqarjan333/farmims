<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Animaltype extends Admin_Controller
{

    function __construct()
    {
        parent::__construct();
        $this->load->model('Animaltype_model');
    }

    function index()
    {
        if ($this->onlly_admin_check()) {
            $this->load->library('form_validation');
            $this->form_validation->set_rules('animaltype', 'Animal Type', 'required');
            $this->form_validation->set_rules('pregnancy_age', 'Pregnancy Age', 'required|numeric');
            $this->form_validation->set_rules('pregnancy_period', 'Pregnancy Period', 'required|numeric');

            if ($this->form_validation->run()) {
                $params = array(
                    'type_of_animal' => $this->input->post('animaltype'),
                    'pregnancy_age' => $this->input->post('pregnancy_age'),
                    'pregnancy_period' => $this->input->post('pregnancy_period'),
                    'created_by' => $this->session->userdata('id') 
                );
                $this->Animaltype_model->add_animaltype($params);
                $this->session->set_flashdata('success', 'Animal Type Added Successfuly!');
                redirect('animaltype');
            } else {
                $data['_view'] = 'animaltype/index';
                $this->load->view('layouts/main', $data);
            }
        } else {
            $this->session->set_flashdata('error', 'You donot have permission to access this section!');
            redirect('dashboard');
        }
    }
    function get_list()
    {
        $columns = array(
            0 => 'type_of_animal',
            1 => 'pregnancy_age',
            2 => 'pregnancy_period',
            3 => 'id'
        );

        // This is for sorting and pagination, it will mstly stay the same
        $limit = $this->input->post('length');
        $start = $this->input->post('start');
        $order = $columns[$this->input->post('order')[0]['column']];
        $dir = $this->input->post('order')[0]['dir'];
        // This is for sorting and pagination, it will mstly stay the same end


        $totalData = $this->Animaltype_model->get_all_animaltype_count();

        $totalFiltered = $totalData;

        if (empty($this->input->post('search')['value'])) {
            $posts = $this->Animaltype_model->get_all_animaltype($limit, $start, $order, $dir);
        } else {
            $search = $this->input->post('search')['value'];

            $posts =  $this->Animaltype_model->animaltype_search($limit, $start, $search, $order, $dir);

            $totalFiltered = $this->Animaltype_model->animaltype_search_count($search);
        }

        $data = array();
        if (!empty($posts)) {
            foreach ($posts as $post) {
                $nestedData['name'] = $post->type_of_animal;
                $nestedData['pregnancy_age'] = $post->pregnancy_age . " Months";
                $nestedData['pregnancy_period'] = $post->pregnancy_period . " Months";
                $nestedData['actions'] = "<button class='btn btn-warning btn-sm waves-effect waves-light btn-edit' code='".$post->id."'><i class='uil-edit-alt'></i> '".$this->lang->line('edit')."'</button>&nbsp;<button class='btn btn-danger waves-effect waves-light btn-sm btn-delete' code='".$post->id."'><i class='uil-trash-alt'></i> '".$this->lang->line('delete')."'</button>";

                $data[] = $nestedData;
            }
        }

        $json_data = array(
            "draw"            => intval($this->input->post('draw')),
            "recordsTotal"    => intval($totalData),
            "recordsFiltered" => intval($totalFiltered),
            "data"            => $data
        );

        echo json_encode($json_data);
    }


    public function edit_country($id)
    {
        # code...
    }

    public function delete_animaltype($id)
    {
        echo $this->Animaltype_model->delete_animaltype($id);
    }

    public function update_animaltype($id)
    {
        $this->load->library('form_validation');
        $this->form_validation->set_rules('type', 'Animal Type', 'required');
        $this->form_validation->set_rules('age', 'Pregnancy Age', 'required|numeric');
        $this->form_validation->set_rules('period', 'Pregnancy Period', 'required|numeric');

        if ($this->form_validation->run()) {
            $params = array(
                'type_of_animal' => $this->input->post('type'),
                'pregnancy_age' => $this->input->post('age'),
                'pregnancy_period' => $this->input->post('period') 
            );

            echo $this->Animaltype_model->update_animaltype($id,$params);
        }
    }
}
