<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Farm extends Admin_Controller
{

    function __construct()
    {
        parent::__construct();
        $this->load->model('Farm_model');
    }

    function index()
    {
        $this->load->library('form_validation');

        if ($this->input->method(true) == 'POST') {
            if ($this->input->post('id')) {
                # Update Farm
                $this->form_validation->set_rules('nameu', ' Name', 'required');
                $this->form_validation->set_rules('emailu', 'Email', 'required');
                // $this->form_validation->set_rules('codeu', ' Code', 'required');
                $this->form_validation->set_rules('phoneu', 'Phone No', 'required');
                $this->form_validation->set_rules('areau', 'Area', 'required');
                $this->form_validation->set_rules('openareau', 'Open Area', 'required');
                $this->form_validation->set_rules('propertytypeu', 'Property Type', 'required');
                $this->form_validation->set_rules('uom_idu', 'Area UOM', 'required');
                $this->form_validation->set_rules('currency_idu', 'Currency', 'required');
                $this->form_validation->set_rules('country_idu', 'Country', 'required');
                $this->form_validation->set_rules('province_idu', 'Province', 'required');

                if ($this->form_validation->run()) {
                    // Left is database column name, right side is value posted from form
                    $params = array(
                        'title' => $this->input->post('nameu'),
                        // 'farm_code' => $this->input->post('codeu'),
                        'farm_description' => $this->input->post('txtareau'),
                        'phone' => $this->input->post('phoneu'),
                        'area' => $this->input->post('areau'),
                        'property_type' => $this->input->post('propertytypeu'),
                        'open_area' => $this->input->post('openareau'),
                        'shed' => $this->input->post('shedu'),
                        'email' => $this->input->post('emailu'),
                        'uom_id' => $this->input->post('uom_idu'),
                        'currency_id' => $this->input->post('currency_idu'),
                        'country_id' => $this->input->post('country_idu'),
                        'province_id' => $this->input->post('province_idu'),
                        'city_id' => $this->input->post('city_idu'),
                        'color_code' => $this->input->post('colorcodeu')
                    );

                    if ($this->input->post('quarantine_new_animalu')) {
                        $params['quarantine_new_animal'] = 1;
                        $params['quarantine_days'] = $this->input->post('quarantine_daysu');
                    } else {
                        $params['quarantine_days'] = 0;
                        $params['quarantine_new_animal'] = 0;
                    }

                    // Image Upload Code
                    // Upload User Profile Image
                    if ($_FILES['farmlogo']['name'] != '') {
                        // Use Relative Path
                        $config['upload_path'] = FCPATH . 'assets/images/farmlogo/';
                        $config['allowed_types'] = 'gif|jpg|png|jepg|JPG|PNG|JPEG';
                        $config['max_size'] = 2000;
                        $config['max_width'] = 1280;
                        $config['max_height'] = 1280;

                        $this->load->library('upload', $config);

                        if ($this->upload->do_upload('farmlogo')) {
                            $img_data = $this->upload->data();
                            $params['logo'] = $img_data['file_name'];
                        } else {
                            // print_r($this->upload->display_errors());
                            // exit;
                            $this->session->set_flashdata('error', $this->upload->display_errors());
                            $params['logo'] = '';
                        }
                    } else {
                        $params['logo'] = '';
                    }
                    // Image Upload Code End
                    $this->db->where('id', $this->input->post('id'))
                        ->update('farm', $params);
                    $this->session->set_flashdata('success', 'Farm updated with success');
                    redirect('farm');
                }
            } else {
                # Add New Farm
                $this->form_validation->set_rules('name', ' Name', 'required');
                $this->form_validation->set_rules('email', 'Email', 'required');
                $this->form_validation->set_rules('code', ' Code', 'required');
                $this->form_validation->set_rules('phone', 'Phone No', 'required');
                $this->form_validation->set_rules('area', 'Area', 'required');
                $this->form_validation->set_rules('openarea', 'Open Area', 'required');
                $this->form_validation->set_rules('propertytype', 'Property Type', 'required');
                $this->form_validation->set_rules('uom_id', 'Area UOM', 'required');
                $this->form_validation->set_rules('currency_id', 'Currency', 'required');
                $this->form_validation->set_rules('country_id', 'Country', 'required');
                $this->form_validation->set_rules('province_id', 'Province', 'required');
                
                
                if ($this->form_validation->run()) {
                    // Left is database column name, right side is value posted from form
                    $params = array(
                        'title' => $this->input->post('name'),
                        'farm_code' => $this->input->post('code'),
                        'farm_description' => $this->input->post('txtarea'),
                        'phone' => $this->input->post('phone'),
                        'area' => $this->input->post('area'),
                        'property_type' => $this->input->post('propertytype'),
                        'open_area' => $this->input->post('openarea'),
                        'shed' => $this->input->post('shed'),
                        'email' => $this->input->post('email'),
                        'uom_id' => $this->input->post('uom_id'),
                        'currency_id' => $this->input->post('currency_id'),
                        'country_id' => $this->input->post('country_id'),
                        'province_id' => $this->input->post('province_id'),
                        'city_id' => $this->input->post('city_id'),
                        'address' => $this->input->post('address'),
                        'lat_lng' => str_replace('"', "", $this->input->post('mapData')),
                        'color_code' => $this->input->post('colorcode'),
                        'created_by' => $this->session->userdata('id')
                    );
                    if ($this->input->post('quarantine_new_animal')) {
                        $params['quarantine_new_animal'] = 1;
                        $params['quarantine_days'] = $this->input->post('quarantine_days');
                    } else {
                        $params['quarantine_days'] = 0;
                        $params['quarantine_new_animal'] = 0;
                    }

                    // Image Upload Code
                    // Upload User Profile Image
                    if ($_FILES['farmlogo']['name'] != '') {
                        // Use Relative Path
                        $config['upload_path'] = FCPATH . 'assets/images/farmlogo/';
                        $config['allowed_types'] = 'gif|jpg|png|jepg|JPG|PNG|JPEG';
                        $config['max_size'] = 2000;
                        $config['max_width'] = 1280;
                        $config['max_height'] = 1280;

                        $this->load->library('upload', $config);

                        if ($this->upload->do_upload('farmlogo')) {
                            $img_data = $this->upload->data();
                            $params['logo'] = $img_data['file_name'];
                        } else {
                            // print_r($this->upload->display_errors());
                            // exit;
                            $this->session->set_flashdata('error', $this->upload->display_errors());
                            $params['logo'] = '';
                        }
                    } else {
                        $params['logo'] = '';
                    }
                    // Image Upload Code End
                    $this->db->trans_start();
                    $farm_id = $this->Farm_model->add_farm($params);
                    $user = array(
                        'fname' => explode(' ', $this->input->post('name'))[0] . ' Farm',
                        'lname' => 'Owner',
                        'phone_no' => $this->input->post('phone'),
                        'mobile_no' => '',
                        'email' => $this->input->post('email'),
                        'password' => md5('123456'),
                        'role' => ROLE_FARM_OWNER,
                        'created_by' => $this->session->userdata('id')
                    );
                    $this->load->model('User_model');
                    $user_id = $this->User_model->add_user($user);
                    $user_farm = array(
                        'user_id' => $user_id,
                        'farm_id' => $farm_id,
                    );
                    $this->db->insert('user_farm', $user_farm);
                    $this->db->trans_complete();


                    // Send Mail
                    $from_email = "sales@farmims.com";
                    $to_email = $this->input->post('email');

                    //Load email library 
                    $this->load->library('email');
                    $config = array(
                        'charset' => 'utf-8',
                        'wordwrap' => TRUE,
                        'mailtype' => 'html'
                    );

                    $this->email->initialize($config);
                    $this->email->from($from_email, 'Farm IMS');
                    $this->email->to($to_email);
                    $this->email->subject('Account Created');
                    // $this->email->message('Farm Details & Account Setup Successful (Default Password: 123456)');
                    $msg = $this->load->view('welcome_mail', '', true);
                    $this->email->message($msg); 
        
                    if ($this->email->send()) {
                        $this->session->set_flashdata('success', '<b>Success!!</b> Farm & Farm Owner Created (Default Password: 123456), Email Also Sent');
                    } else {
                        $this->session->set_flashdata('success', '<b>Success!!</b> Farm & Farm Owner Created (Default Password: 123456)');
                    }

                    redirect('farm');
                }
            }
        }

        $this->load->model('Country_model');
        $data['countries'] = $this->Country_model->get_all_country_for_dd();

        $this->load->model('Currency_model');
        $data['currency'] = $this->Currency_model->get_currency_for_dd();
        $this->load->model('Areauom_model');
        $data['areauom'] = $this->Areauom_model->get_areauom_for_dd();
        $data['code'] = $this->Farm_model->get_code();
        $data['_view'] = 'farm/index';

        $this->load->view('layouts/main', $data);
    }



    function email_temp()
    {
        $this->load->view('welcome_mail');
    }

    function get_search_dd()
    {
        $json = [];
        //if (!empty($this->input->get("q"))) {
            $this->db->like('title', $this->input->get("q"));
            $query = $this->db->select('id,title as text')
                ->limit(10)
                ->get("farm");
            $json = $query->result();
        //}

        echo json_encode($json);
    }

    function get_province_by_country_id($country_id)
    {
        $this->load->model('Province_model');
        $data = $this->Province_model->province_by_country_id($country_id);
        foreach ($data as $d) {
            echo "<option value='" . $d['id'] . "'>" . $d['province_name'] . "</option>";
        }
    }
    function get_list()
    {
        $columns = array(
            0 => 'farm.title',
            1 => 'farm.farm_code',
            2 => 'farm.email',
            3 => 'farm.phone',
            4 => 'farm.area',
            5 => '',
            6 => 'farm.open_area',
            7 => 'farm.shed',
            8 => 'currency.name',
            9 => 'province.name',
            10 => 'city.name',
        );

        // This is for sorting and pagination, it will mstly stay the same
        $limit = $this->input->post('length');
        $start = $this->input->post('start');
        $order = $columns[$this->input->post('order')[0]['column']];
        $dir = $this->input->post('order')[0]['dir'];
        // This is for sorting and pagination, it will mstly stay the same end


        $totalData = $this->Farm_model->get_all_farm_count();

        $totalFiltered = $totalData;

        if (empty($this->input->post('search')['value'])) {
            $posts = $this->Farm_model->get_all_farm($limit, $start, $order, $dir);
        } else {
            $search = $this->input->post('search')['value'];

            $posts =  $this->Farm_model->farm_search($limit, $start, $search, $order, $dir);

            $totalFiltered = $this->Farm_model->farm_search_count($search);
        }

        $data = array();
        if (!empty($posts)) {

            foreach ($posts as $post) {
                if ($post->property_type == PROPERTY_TYPE_OWN) {
                    $pt = '<span class="badge badge-success">Own</span>';
                } else if ($post->property_type == PROPERTY_TYPE_RENT) {
                    $pt = '<span class="badge badge-primary">Rent</span>';
                } else if ($post->property_type == PROPERTY_TYPE_LEASE) {
                    $pt = '<span class="badge badge-warning">Lease</span>';
                } else {
                    $pt = '<span class="badge badge-danger">Undefined</span>';
                }
                $nestedData['name'] = $post->title;
                $nestedData['code'] = $post->farm_code;
                $nestedData['phone'] = $post->phone;
                $nestedData['area'] = $post->area . ' (' . $post->uom_name . ')';
                $nestedData['propertytype'] = $pt;
                $nestedData['openarea'] = $post->open_area . ' (' . $post->uom_name . ')';
                $nestedData['shed'] = $post->shed;
                $nestedData['email'] = $post->email;
                $nestedData['currency_id'] = $post->currency_name;
                $nestedData['province_id'] = $post->province_name;
                $nestedData['city_id'] = $post->city_name;

                $nestedData['actions'] = "<button class='btn btn-warning btn-sm btn-edit' code='" . $post->id . "'><i class='uil-edit-alt'></i> Edit</button>&nbsp;<button class='btn btn-danger btn-sm btn-delete'  code='" . $post->id . "'><i class='uil-trash-alt'></i> Delete</button>";

                $data[] = $nestedData;
            }
        }

        $json_data = array(
            "draw"            => intval($this->input->post('draw')),
            "recordsTotal"    => intval($totalData),
            "recordsFiltered" => intval($totalFiltered),
            "data"            => $data
        );

        echo json_encode($json_data);
    }

    public function edit_country($id)
    {
        # code...
    }

    public function delete_farm($farm_id)
    {
        $this->Farm_model->delete_farm($farm_id);
        echo 1;
    }

    public function get_farm($id)
    {
        echo json_encode($this->Farm_model->get_farm($id));
    }
}
