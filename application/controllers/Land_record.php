<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Land_record extends Admin_Controller
{

    function __construct()
    {
        parent::__construct();
        $this->load->model('LandManagementData_model');
        $this->load->model('Land_record_model');
        $this->load->model('Areauom_model');
        $this->load->model('Country_model');
        date_default_timezone_set('Asia/Karachi');
    }
    // public function land_form(){
    //     echo "<pre>";
    //     print_r($this->input->post());
    // }
    public function index (){
        $data['landType'] = $this->LandManagementData_model->get_all_LandType_data('Land Type');
        $data['TypeOfLand'] = $this->LandManagementData_model->get_all_LandType_data('Type Of Land');
        $data['cropstaken'] = $this->LandManagementData_model->get_all_LandType_data('Crops Taken');
        $data['paymentMethod'] = $this->LandManagementData_model->get_all_LandType_data('Payment Method');
        $data['paymentTerm'] = $this->LandManagementData_model->get_all_LandType_data('Payment Term');
        $data['areauom'] = $this->Areauom_model->get_areauom_for_dd();
        $data['countries'] = $this->Country_model->get_all_country_for_dd();
        $data['_view'] = 'landrecord/index';
        $this->load->view('layouts/main', $data);
    }

    
    public function land_form(){
        if ($this->input->method(true) == 'POST') {
            $last_id='';
            if($this->input->post('land_type')=="Leased"){
                $this->load->library('form_validation');
                $this->form_validation->set_rules('contract_date', ' Start Date', 'required');
                $this->form_validation->set_rules('contract_reg_number', 'Tenure', 'required');
                $this->form_validation->set_rules('yearly_increase', 'Registration Number', 'required');
                $this->form_validation->set_rules('contract_tenure', 'Amount', 'required');
                $this->form_validation->set_rules('unit_year', 'Unit/Year', 'required');
                $this->form_validation->set_rules('area_uom_leased', 'Built Area', 'required');
                $this->form_validation->set_rules('type_of_land_leased', 'Area UOM', 'required');
                $this->form_validation->set_rules('payment_method', 'Payment Method', 'required');
                $this->form_validation->set_rules('payment_term', 'Payment Term', 'required');
                $this->form_validation->set_rules('meter_number', 'Meter Number', 'required');
                $this->form_validation->set_rules('last_meter_reading_before_handover', 'Last Bill Before Handover', 'required');
                $this->form_validation->set_rules('owner_name', 'Owner Name', 'required');
                $this->form_validation->set_rules('owner_id_card', 'Owner ID Card', 'required');
                $this->form_validation->set_rules('owner_email', 'Owner Email', 'required');
                $this->form_validation->set_rules('owner_contact', 'Owner Contact', 'required');
                $this->form_validation->set_rules('owner_address', 'Owner Address', 'required');
                $this->form_validation->set_rules('owner_city', 'Owner City', 'required');
                $this->form_validation->set_rules('owner_country', 'Owner Country', 'required');

                //if ($this->form_validation->run()) {
                $params = array(
                        'contract_date' => $this->input->post('contract_date'),
                        'contract_reg_number' => $this->input->post('contract_reg_number'),
                        'yearly_increase' => $this->input->post('yearly_increase'),
                        'contract_tenure' => $this->input->post('contract_tenure'),
                        'unit_year' => $this->input->post('unit_year'),
                        'area_uom_leased' => $this->input->post('area_uom_leased'),
                        'type_of_land_leased' => $this->input->post('type_of_land_leased'),
                        'payment_method' => $this->input->post('payment_method'),
                        'payment_term' => $this->input->post('payment_term'),
                        'meter_number' => $this->input->post('meter_number'),
                        'last_meter_reading_before_handover' => $this->input->post('last_meter_reading_before_handover'),
                        'created_by' => $this->session->userdata('id'),
                        'status' => ACTIVE,
                        'farm_id' => $this->session->userdata('active_farm')
                    );
                $last_id = $this->Land_record_model->add('leased_land', $params);
                $params2 = array(
                        'leased_land_id' => $last_id,
                        'owner_name' => $this->input->post('owner_name'),
                        'owner_id_card' => $this->input->post('owner_id_card'),
                        'owner_email' => $this->input->post('owner_email'),
                        'owner_contact' => $this->input->post('owner_contact'),
                        'owner_address' => $this->input->post('owner_address'),
                        'owner_city' => $this->input->post('owner_city'),
                        'owner_country' => $this->input->post('owner_country'),
                        'status' => ACTIVE,
                        'farm_id' => $this->session->userdata('active_farm')
                    );
                $this->Land_record_model->add('leased_land_owner', $params2);

                $witnessData = array_chunk($this->input->post('witness_name'), 3, true);
                foreach ($witnessData as $key => $value) {
                    $array = array_values($value);
                    $params3 = array(
                        'leased_land_id' => $last_id,
                        'witness_name' => $array[0],
                        'witness_id_card' => $array[1],
                        'witness_contact' => $array[2],
                        'status' => ACTIVE,
                        'farm_id' => $this->session->userdata('active_farm')
                    );
                    $this->Land_record_model->add('leased_land_witness', $params3);
                    }
                    
                
                $this->session->set_flashdata('success', 'Leased Land added successfuly');
                
            // } else {
            //     $this->session->set_flashdata('error', 'Something went wrong please try again!');
            //     redirect('Land_record');
            // }

            } elseif ($this->input->post('land_type')=="Rent") {

            $this->load->library('form_validation');
            
            $this->form_validation->set_rules('rent_start_date', ' Start Date', 'required');
            $this->form_validation->set_rules('rent_tenure', 'Tenure', 'required');
            $this->form_validation->set_rules('rent_reg_number', 'Registration Number', 'required');
            $this->form_validation->set_rules('rent_amount', 'Amount', 'required');
            $this->form_validation->set_rules('type_of_land_rent', 'Rent Land Type', 'required');
            $this->form_validation->set_rules('no_of_sheds', 'Number Of Sheds', 'required');
            $this->form_validation->set_rules('built_area', 'Built Area', 'required');
            $this->form_validation->set_rules('area_uom_rent', 'Area UOM', 'required');
            $this->form_validation->set_rules('payment_method_rent', 'Payment Method', 'required');
            $this->form_validation->set_rules('payment_term_rent', 'Payment Term', 'required');
            $this->form_validation->set_rules('meter_number_rent', 'Meter Number', 'required');
            $this->form_validation->set_rules('last_bill_before_handover_rent', 'Last Bill Before Handover', 'required');


            $this->form_validation->set_rules('owner_name_rent', 'Owner Name', 'required');
            $this->form_validation->set_rules('owner_id_card_rent', 'Owner ID Card', 'required');
            $this->form_validation->set_rules('owner_email_rent', 'Owner Email', 'required');
            $this->form_validation->set_rules('owner_contact_rent', 'Owner Contact', 'required');
            $this->form_validation->set_rules('owner_address_rent', 'Owner Address', 'required');
            $this->form_validation->set_rules('owner_city_rent', 'Owner City', 'required');
            $this->form_validation->set_rules('owner_country_rent', 'Owner Country', 'required');


            // if ($this->form_validation->run()) {
                $params = array(
                        'rent_start_date' => $this->input->post('rent_start_date'),
                        'rent_tenure' => $this->input->post('rent_tenure'),
                        'rent_reg_number' => $this->input->post('rent_reg_number'),
                        'rent_amount' => $this->input->post('rent_amount'),
                        'type_of_land_rent' => $this->input->post('type_of_land_rent'),
                        'no_of_sheds' => $this->input->post('no_of_sheds'),
                        'built_area' => $this->input->post('built_area'),
                        'area_uom_rent' => $this->input->post('area_uom_rent'),
                        'payment_method_rent' => $this->input->post('payment_method_rent'),
                        'payment_term_rent' => $this->input->post('payment_term_rent'),
                        'meter_number_rent' => $this->input->post('meter_number_rent'),
                        'last_bill_before_handover_rent' => $this->input->post('last_bill_before_handover_rent'),
                        'created_by' => $this->session->userdata('id'),
                        'status' => ACTIVE,
                        'farm_id' => $this->session->userdata('active_farm')
                    );
                $last_id = $this->Land_record_model->add('rent_land', $params);
                $params2 = array(
                        'rent_land_id' => $last_id,
                        'owner_name_rent' => $this->input->post('owner_name_rent'),
                        'owner_id_card_rent' => $this->input->post('owner_id_card_rent'),
                        'owner_email_rent' => $this->input->post('owner_email_rent'),
                        'owner_contact_rent' => $this->input->post('owner_contact_rent'),
                        'owner_address_rent' => $this->input->post('owner_address_rent'),
                        'owner_city_rent' => $this->input->post('owner_city_rent'),
                        'owner_country_rent' => $this->input->post('owner_country_rent'),
                        'status' => ACTIVE,
                        'farm_id' => $this->session->userdata('active_farm')
                    );
                $this->Land_record_model->add('rent_land_owner', $params2);
                $this->session->set_flashdata('success', 'Rent Land added successfuly');
                
            // } else {
            //     $this->session->set_flashdata('error', 'Something went wrong please try again!');
            //     redirect('Land_record');
            // }
            } elseif ($this->input->post('land_type')=="Owned") {
                $this->load->library('form_validation');
                
                $this->form_validation->set_rules('purchase_date', ' Purchase Date', 'required');
                $this->form_validation->set_rules('type_of_land', ' Type Of Land', 'required');
                $this->form_validation->set_rules('value_per_unit', 'Value Per Unit', 'required');
                $this->form_validation->set_rules('area_uom', 'Area UOM', 'required');
                $this->form_validation->set_rules('owned_land_acre', 'Arce', 'required');
                $this->form_validation->set_rules('calculate_purchase_time', 'Calculate Purchase Time', 'required');
                $this->form_validation->set_rules('crops_taken', 'Crops Taken', 'required');

                //if ($this->form_validation->run()) {
                    $params = array(
                            'purchase_date' => $this->input->post('purchase_date'),
                            'type_of_land' => $this->input->post('type_of_land'),
                            'value_per_unit' => $this->input->post('value_per_unit'),
                            'area_uom' => $this->input->post('area_uom'),
                            'owned_land_acre' => $this->input->post('owned_land_acre'),
                            'calculate_purchase_time' => $this->input->post('calculate_purchase_time'),
                            'crops_taken' => implode(',', $this->input->post('crops_taken')),
                            'created_by' => $this->session->userdata('id'),
                            'status' => ACTIVE,
                            'farm_id' => $this->session->userdata('active_farm')
                        );
                    $last_id = $this->Land_record_model->add('owned_land', $params);
                    
                    
                    $this->session->set_flashdata('success', 'Owned Land added successfuly');
                    
                // } else {
                //     $this->session->set_flashdata('error', 'Something went wrong please try again!');
                //     redirect('Land_record');
                // }
            }
            $invoice=$this->Land_record_model->get_invoiceno($this->input->post('land_type'));
            for ($i=0; $i < count($this->input->post('batch_no')); $i++) {
                if($this->input->post('batch_no')[$i]!=''){ 
                        $params = array(
                            'last_form_id' => $last_id,
                            'invoice_no' => $invoice,
                            'batch_no' => $this->input->post('batch_no')[$i],
                            'area_no' => $this->input->post('area_no')[$i],
                            'area_value' => $this->input->post('area_value')[$i],
                            'land_type' => $this->input->post('land_type'),
                            'google_search_place' => $this->input->post('google_search_address'),
                            'google_search_address_longitude' => $this->input->post('google_search_address_longitude'),
                            'google_search_address_latitude' => $this->input->post('google_search_address_latitude'),
                            'created_by' => $this->session->userdata('id'),
                            'status' => ACTIVE,
                            'farm_id' => $this->session->userdata('active_farm')
                        );
                        $this->Land_record_model->add('land_batch', $params);
                }              
            }
        
            redirect('Land_record');
        }    
    }
    
    

    

    
     

    
    
}
