<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Animalbreed extends Admin_Controller
{

    function __construct()
    {
        parent::__construct();
        $this->load->model('Animalbreed_model');
    }

    function index()
    {
        $this->load->library('form_validation');
        $this->form_validation->set_rules('animalbreed', 'Breed Name', 'required');

        if ($this->form_validation->run()) {
            $params = array(
                'breed_name' => $this->input->post('animalbreed'),
                'animal_type_id' => $this->input->post('animaltype'),
                'created_by' => $this->session->userdata('id')
            );
            $this->Animalbreed_model->add_animalbreed($params);
            $this->session->set_flashdata('success', 'Breed Added Successfuly');
            redirect('animalbreed');
        } else {
            $this->load->model('Animaltype_model');
            $data['animaltypeid'] = $this->Animaltype_model->get_animaltype_for_dd();
            $data['_view'] = 'animalbreed/index';

            $this->load->view('layouts/main', $data);
        }
    }
    function get_list()
    {
        $columns = array(
            0 => 'breed.breed_name',
            1 => 'animal_type.type_of_animal',
            2 => 'breed.id'
        );

        // This is for sorting and pagination, it will mstly stay the same
        $limit = $this->input->post('length');
        $start = $this->input->post('start');
        $order = $columns[$this->input->post('order')[0]['column']];
        $dir = $this->input->post('order')[0]['dir'];
        // This is for sorting and pagination, it will mstly stay the same end


        $totalData = $this->Animalbreed_model->get_all_animalbreed_count();

        $totalFiltered = $totalData;

        if (empty($this->input->post('search')['value'])) {
            $posts = $this->Animalbreed_model->get_all_animalbreed($limit, $start, $order, $dir);
        } else {
            $search = $this->input->post('search')['value'];

            $posts =  $this->Animalbreed_model->animalbreed_search($limit, $start, $search, $order, $dir);

            $totalFiltered = $this->Animalbreed_model->animalbreed_search_count($search);
        }

        $data = array();
        if (!empty($posts)) {
            foreach ($posts as $post) {
                $nestedData['name'] = $post->breed_name;
                $nestedData['animal_type'] = $post->animal_type;
                $nestedData['actions'] = "<button class='btn btn-warning btn-sm btn-edit' code='" . $post->id . "'>'".$this->lang->line('edit')."'</button>&nbsp;<button class='btn btn-danger btn-sm btn-delete' code='" . $post->id . "'>'".$this->lang->line('delete')."'</button>";

                $data[] = $nestedData;
            }
        }

        $json_data = array(
            "draw"            => intval($this->input->post('draw')),
            "recordsTotal"    => intval($totalData),
            "recordsFiltered" => intval($totalFiltered),
            "data"            => $data
        );

        echo json_encode($json_data);
    }


    public function edit_country($id)
    {
        # code...
    }

    function delete_animalbreed($id)
    {
        echo $this->Animalbreed_model->delete_animalbreed($id);
    }


    function update_animabreed($id)
    {
        $params = array(
            'breed_name' => $this->input->post('breedname'),
            'animal_type_id' => $this->input->post('breedtype')
        );

        echo $this->Animalbreed_model->update_animalbreed($id, $params);
    }
}
