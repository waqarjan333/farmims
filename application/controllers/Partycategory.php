<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Partycategory extends Admin_Controller{
    
    function __construct()
    {
        parent::__construct();
        $this->load->model('Partycategory_model');
    }

    function index()
    {  
        $this->load->library('form_validation');

        $this->form_validation->set_rules('partycategory', 'partycategory', 'required'); 

        $this->form_validation->set_rules('type','Partner Category Type','trim|required|exact_length[1]');

        if ($this->form_validation->run()) {
            $params = array(
                'name' => $this->input->post('partycategory'),
                'created_by' => $this->session->userdata('id'),
                'farm_id' => $this->session->userdata('active_farm'),
                'type'=>$this->input->post('type')
            );
            $this->Partycategory_model->add_partycategory($params);
            $this->session->set_flashdata('success','Partner Category Added Successfuly');
            redirect('partycategory');
        } else {

            $data['_view'] = 'partycategory/index';

            $this->load->view('layouts/main',$data);
        }
      
    }

    function get_single_partner_category()
    {  
        $this->load->library('form_validation');

        $this->form_validation->set_rules('partycategory', 'partycategory', 'required'); 

        $this->form_validation->set_rules('type','Partner Category Type','trim|required|exact_length[1]');

        if ($this->form_validation->run()) {
            $params = array(
                'id' => $this->input->post('party_category_id'),
                'name' => $this->input->post('partycategory'),
                'created_by' => $this->session->userdata('id'),
                'farm_id' => $this->session->userdata('active_farm'),
                'type'=>$this->input->post('type')
            );
            $this->Partycategory_model->update_party_category($this->input->post('party_category_id'), $params);
            $this->session->set_flashdata('success','Partner Category Updated Successfuly');
            redirect('partycategory');
        } else {

            $data['_view'] = 'partycategory/edit';
            $data['partnerCategory'] = $this->Partycategory_model->get_party_category($this->uri->segment(3));
            $this->load->view('layouts/main',$data);
        }
      
    }

    function get_list()
    {
        $columns = array(
            0 => 'name',
            1 => 'type',
            2 => 'id'
        );

        // This is for sorting and pagination, it will mstly stay the same
        $limit = $this->input->post('length');
        $start = $this->input->post('start');
        $order = $columns[$this->input->post('order')[0]['column']];
        $dir = $this->input->post('order')[0]['dir'];
        // This is for sorting and pagination, it will mstly stay the same end


        $totalData = $this->Partycategory_model->get_all_partycategory_count();

        $totalFiltered = $totalData;

        if (empty($this->input->post('search')['value'])) {
            $posts = $this->Partycategory_model->get_all_partycategory($limit, $start, $order, $dir);
        } else {
            $search = $this->input->post('search')['value'];

            $posts =  $this->Partycategory_model->partycategory_search($limit, $start, $search, $order, $dir);

            $totalFiltered = $this->Partycategory_model->partycategory_search_count($search);
        }

        $data = array();
        if (!empty($posts)) {
            foreach ($posts as $post) {
                $nestedData['name'] = $post->name;
                $nestedData['type'] = $post->pretty_type;
                $nestedData['actions'] = "<a class='btn btn-warning btn-xs' href='partycategory/get_single_partner_category/".$post->id."'>Edit</a>&nbsp;<button class='btn btn-danger btn-xs delete-pc-btn' code='".$post->id."'>Delete</button>";

                $data[] = $nestedData;
            }
        }

        $json_data = array(
            "draw"            => intval($this->input->post('draw')),
            "recordsTotal"    => intval($totalData),
            "recordsFiltered" => intval($totalFiltered),
            "data"            => $data
        );

        echo json_encode($json_data);
    }

    
    public function edit_country($id)
    {
        # code...
    }


    function delete($id=null){
        echo json_encode($this->Partycategory_model->delete_party_category($id));
    }


    function get_party_categories_($party_type){

        $options = '<option value="">Select Party Category</option>';

        $categories = $this->Partycategory_model->get_party_categories($party_type);

        if (count($categories)==0) {
            $options = '<option value="">No Party Category</option>';
        } else {
            foreach ($categories as $key => $value) {
                $options.="<option value='{$value['id']}'>{$value['name']}</option>";
            }
        }
        
        echo json_encode($options);

    }


}
