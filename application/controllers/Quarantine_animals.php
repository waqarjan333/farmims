<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Quarantine_animals extends Admin_Controller
{

    function __construct()
    {
        parent::__construct();
        $this->load->model('Quarantine_animals_model');
        date_default_timezone_set('Asia/Karachi');
    }

    function index()
    {

        if ($this->input->method(true) == 'POST') {
            $this->load->library('form_validation');
            $this->load->model('Animals_model');

            if ($this->input->post('id')) {
                # Update Request
                $this->form_validation->set_rules('nameu', ' Name', 'required');
                // $this->form_validation->set_rules('codeu', ' code', 'required');
                $this->form_validation->set_rules('dobu', 'date of birth', 'required');
                $this->form_validation->set_rules('dopu', 'date of purchase', 'required');
                $this->form_validation->set_rules('breedidu', 'breed', 'required');
                // $this->form_validation->set_rules('animaltypeu', 'area', 'required');
                $this->form_validation->set_rules('sexu', 'sex', 'required');
                if ($this->form_validation->run()) {
                    // Left is database column name, right side is value posted from form
                    $params = array(
                        'name' => $this->input->post('nameu'),
                        // 'code' => $this->input->post('codeu'),
                        'dob' => $this->input->post('dobu'),
                        'dop' => $this->input->post('dopu'),
                        'animal_breed' => $this->input->post('breedidu'),
                        'sex' => $this->input->post('sexu'),
                        'father_id' => $this->input->post('fatheridu'),
                        'mother_id' => $this->input->post('motheridu'),
                        'weight' => $this->input->post('weightu')
                    );
                    $uom = $this->db->get_where('item_uom', array('symbol' => 'Kg'))->row_array();
                    if ($uom) {
                        $params['item_uom_id'] = $uom['id'];
                    }
                    // Image Upload Code
                    // Upload User Profile Image
                    if ($_FILES['animalimage']['name'] != '') {
                        $config['upload_path'] = FCPATH . 'assets/images/animals/';
                        $config['allowed_types'] = 'gif|jpg|png|jepg|JPG|PNG|JPEG';
                        $config['max_size'] = 2000;
                        $config['max_width'] = 1280;
                        $config['max_height'] = 1280;

                        $this->load->library('upload', $config);

                        if ($this->upload->do_upload('animalimage')) {
                            $img_data = $this->upload->data();
                            $params['avatar'] = $img_data['file_name'];
                        } else {
                            $this->session->set_flashdata('error', $this->upload->display_errors());
                            $params['avatar'] = '';
                        }
                    }
                    // Image Upload Code End
                    $this->Animals_model->update_animal($this->input->post('id'), $params);
                    $this->session->set_flashdata('success', 'Animal updated successfuly');
                    redirect('quarantine_animals');
                }
            }
        }


        $data['_view'] = 'quarantine/index';
        $this->load->view('layouts/main', $data);
    }

    function get_animals_list()
    {
        $columns = array(
            0 => 'a.code',
            1 => 'a.name',
            2 => 'a.dob',
            3 => 'breed.breed_name',
            4 => 'animal_type.type_of_animal',
            5 => 'a.sex',
            6 => '',
            7 => '',
            8 => 'a.status',
            9 => 'a.id',
            10 => 'a.dop',
            11 => 'a.father_id',
            12 => 'a.mother_id',
            13 => 'a.weight'
        );

        // This is for sorting and pagination, it will mstly stay the same
        $limit = $this->input->post('length');
        $start = $this->input->post('start');
        $order = $columns[$this->input->post('order')[0]['column']];
        $dir = $this->input->post('order')[0]['dir'];
        // This is for sorting and pagination, it will mstly stay the same end


        $totalData = $this->Quarantine_animals_model->get_all_animals_count();

        $totalFiltered = $totalData;

        if (empty($this->input->post('search')['value'])) {
            $posts = $this->Quarantine_animals_model->get_all_animals($limit, $start, $order, $dir);
        } else {
            $search = $this->input->post('search')['value'];

            $posts =  $this->Quarantine_animals_model->animals_search($limit, $start, $search, $order, $dir);

            $totalFiltered = $this->Quarantine_animals_model->animals_search_count($search);
        }
        $data = array();
        if (!empty($posts)) {
            foreach ($posts as $post) {
                if ($post->sex == MALE) {
                    $sex = "MALE";
                    $yeildbtn = "";
                } else {
                    $sex = "FEMALE";
                    if ($post->status == ACTIVE) {
                        $yeildbtn = "<button class='btn btn-info btn-sm waves-effect waves-light' data-toggle='modal' data-target='.bs-example-modal-sm' onclick='fcidim(" . $post->id . ")' ><i class='uil-water-glass'></i> Milk</button>";
                    } else {
                        $yeildbtn = "";
                    }
                }
                $todayYeild = $this->get_today_yeild($post->id);
                if ($todayYeild) {
                    $todayYeild = "<span class='badge badge-info'>" . $todayYeild . "</span>";
                } else {
                    $todayYeild = "<span class='badge badge-warning'>Not Available</span>";
                }

                $yesterdayYeild = $this->get_yesterday_yeild($post->id);
                if ($yesterdayYeild) {
                    $yesterdayYeild = "<span class='badge badge-info'>" . $yesterdayYeild . "</span>";
                } else {
                    $yesterdayYeild = "<span class='badge badge-warning'>Not Available</span>";
                }

                if ($post->status == ACTIVE) {
                    if ($post->sex == MALE) {
                        $status = '<span class="badge badge-pill badge-primary">Male</span>';
                    } else {
                        $status = '<span class="badge badge-pill badge-primary">MILKING</span>';
                    }
                    
                } else if ($post->status == SUSPENDED) {
                    $status = '<span class="badge badge-pill badge-dark">INACTIVE</span>';
                } else if ($post->status == PREGNENT) {
                    $status = '<span class="badge badge-pill badge-success">PREGNENT</span>';
                } else if ($post->status == HEIFER) {
                    $status = '<span class="badge badge-pill badge-warning">HEIFER</span>';
                } else if ($post->status == QUARANTINE) {
                    $now = time(); // or your date as well
                    $your_date = strtotime($post->date_created);
                    $datediff = $now - $your_date;
                    $days_passed =  round($datediff / (60 * 60 * 24));
                    $days_left = intval($this->session->userdata('quarantine_days')) - intval($days_passed);

                    if ($days_left <= 1) {
                        $unquarantine = "<br> <a href='" . base_url('quarantine_animals/move_to_milking/' . $post->id) . "' class='btn btn-success btn-sm waves-effect waves-warning'>Move To Milking</a>";
                    } else {
                        $unquarantine = "";
                    }
                    $status = '<span class="badge badge-pill badge-danger">QUARANTINED</span><br>' . $days_left . ' Days Left' . $unquarantine;
                } else if ($post->status == DISEASED) {
                    $status = '<span class="badge badge-pill badge-dark">DISEASES</span>';
                }


                $nestedData['name'] = $post->name;
                $nestedData['code'] = "<img class='img-thumbnailx' src='" . base_url('assets/images/animals/' . $post->avatar) . "' onerror='imgError(this);''> <br>" . $post->code;
                $nestedData['yes_yeild'] = $yesterdayYeild;
                $nestedData['today_yeild'] = $todayYeild;
                $nestedData['status'] = $status;

                $birthday = new DateTime($post->dob);
                $diff = $birthday->diff(new DateTime());
                $months = $diff->format('%m') + 12 * $diff->format('%y');

                $nestedData['dob'] = $months . "&nbsp;Months";
                $nestedData['dop'] = $post->dop;
                $nestedData['sex'] = $sex;
                $nestedData['animaltype'] = $post->type;
                $nestedData['breedid'] = $post->breed_name;
                $nestedData['fatherid'] = $post->father_name;
                $nestedData['motherid'] = $post->mother_name;
                $nestedData['weight'] = $post->weight . " (" . $post->symbol . ")";

                $view_profile_btn = "<a href='" . base_url('animals/view/' . base64_encode($post->id)) . "' class='btn btn-success btn-sm waves-effect waves-light'><i class='uil-eye'></i> View</a>&nbsp;";

                $nestedData['actions'] = $view_profile_btn . "<button class='btn btn-warning btn-sm waves-effect waves-light btn-edit' code='" . $post->id . "'><i class='uil-edit-alt'></i> Edit</button>&nbsp;<button class='btn btn-danger delete-animal-btn btn-sm waves-effect waves-light' code='" . $post->id . "'><i class='uil-trash-alt'></i> Delete</button>&nbsp;" . $yeildbtn;

                $data[] = $nestedData;
            }
        }

        $json_data = array(
            "draw"            => intval($this->input->post('draw')),
            "recordsTotal"    => intval($totalData),
            "recordsFiltered" => intval($totalFiltered),
            "data"            => $data
        );

        echo json_encode($json_data);
    }

    function get_today_yeild($animal_id)
    {
        $this->db->select('SUM(milk_yeild.qty) as total_yeild');
        $wheret = array(
            'animal_id' => $animal_id,
            'farm_id' => $this->session->userdata('active_farm'),
            'date' => date('Y-m-d')
        );
        $data = $this->db->get_where('milk_yeild', $wheret)->row_array();
        return $data['total_yeild'];
    }

    function get_yesterday_yeild($animal_id)
    {
        $this->db->select('SUM(milk_yeild.qty) as total_yeild');
        $wherey = array(
            'animal_id' => $animal_id,
            'farm_id' => $this->session->userdata('active_farm'),
            'date' => date("Y-m-d", strtotime("yesterday"))
        );
        $data =  $this->db->get_where('milk_yeild', $wherey)->row_array();
        return $data['total_yeild'];
    }

    function move_to_milking($animal_id)
    {
        $params = array(
            'status' => ACTIVE
        );
        $this->Quarantine_animals_model->update_animal($animal_id, $params);
        redirect('quarantine_animals');
    }
}
