<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Product_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();

        // Select All Query
        // $this->db->get('country')->result_array();
    }

    /*
     * Get brand by id
     */
    function get_brand($id)
    {
        return $this->db->get_where('brand', array('id' => $id))->row_array();
    }

    /*
     * Get all brand count
     */
    function get_all_product_count()
    {
        $this->db->where('product.status!=',DELETED);
        $this->filter_by_active_farm('product');
        $query = $this->db->get('product'); 
        return $query->num_rows();
    }

    // function province_by_country_id($id){
    //     $this->db->select('province.id, province.name as province_name');
    //     $this->db->where('status', ACTIVE);
    //     $this->db->where('country_id', $id);
    //     return $this->db->get('province')->result_array();
    // }
    /*
     * Get all brand
     */
    function get_all_product($limit, $start, $col, $dir)
    {
        $this->db->where('product.status!=',DELETED);
        $this->filter_by_active_farm('product');
        $query = $this->db->limit($limit, $start)->order_by($col, $dir)->get('product'); 

        if ($query->num_rows() > 0) {
            return $query->result();
        } else {
            return null;
        }
    }


    function product_stock($id)
    {
        $this->db->select('sum(quantity) AS stock');
        $this->filter_by_active_farm();
        $this->db->where('item_id', $id);
        $query = $this->db->get('stocks')->row()->stock;
        //print_r($this->db->last_query()); exit;
        return $query;
    }

    function get_unit_name($id)
    {
        $this->db->select('name AS uom_name');
        $this->db->where('id', $id);
        $query = $this->db->get('item_uom')->row()->uom_name;
        //print_r($this->db->last_query()); exit;
        return $query;
    }

    function get_category_name($id)
    {
        $this->db->select('name AS cat_name');
        $this->db->where('id', $id);
        $query = $this->db->get('product_category')->row()->cat_name;
        //print_r($this->db->last_query()); exit;
        return $query;
    }

    function get_pros_for_dd(){
        $this->db->select('product.*,item_uom.name AS item_uom_name, item_uom.symbol AS item_uom_symbol');
        $this->db->join('item_uom', 'product.purchase_unit = item_uom.id');
        $this->db->where('product.status!=',DELETED);
        $this->filter_by_active_farm('product');
        return $this->db->get('product')->result_array();
    }

    function product_search($limit,$start,$search,$col,$dir)
    {
        $this->db->where('product.status!=',DELETED);
        $this->filter_by_active_farm('product');
        $query = $this
                ->db
                // ->like('product.product_name',$search) 
                // ->or_like('product.product_category_id',$search)
                ->where("(product.product_name LIKE '%$search%' OR product.product_category_id LIKE '%$search%')")
                ->limit($limit,$start)
                ->order_by($col,$dir)
                ->get('product');
        
       
        if($query->num_rows()>0)
        {
            return $query->result();  
        }
        else
        {
            return null;
        }
    }

    function product_search_count($search)
    {
        $this->filter_by_active_farm('product');
        $query = $this
                ->db
                // ->like('product.product_name',$search) 
                // ->or_like('product.product_category_id',$search)
                ->where("(product.product_name LIKE '%$search%' OR product.product_category_id LIKE '%$search%')")
                ->get('product');
    
        return $query->num_rows();
    } 

    /*
     * function to add new brand
     */
    function add_product($params)
    {
        $this->db->insert('product', $params);
        return $this->db->insert_id();
    }

    /*
     * function to update brand
     */
    function update_brand($id, $params)
    {
        $this->db->where('id', $id);
        return $this->db->update('brand', $params);
    }

    /*
     * function to delete brand
     */
    function delete_brand($id)
    {
        return $this->db->delete('brand', array('id' => $id));
    }

    function delete_product($id){
        return $this->db->where('id',$id)
        ->update('product',['status'=>DELETED]);
    }

    function get_product_by_category($category_id){

        return $this->db->where([
            'product.farm_id'=>$this->session->active_farm,
            'product.product_category_id'=>$category_id
        ])
        ->order_by('product.product_name')
        ->get('product')
        ->result();

    }

    function get_product($id){
        return $this->db->where('id',$id)
        ->get('product')
        ->row();
    }

    function update_product($id,$params){
         $this->db->where('id',$id)
        ->update('product',$params);
        return $this->db->affected_rows()>0;
    }


    function get_available_stock($product_id){
        $item = $this->db->where('product.id',$product_id)
        ->select('product.stock_unit')
        ->get('product')
        ->row();

        return ($item)?$item->stock_unit:0;
    }


}
