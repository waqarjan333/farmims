<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Fattening_animals_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }

    /*
     * Get animal by id
     */
    function get_animal($id)
    {
        return $this->db->get_where('fattening_animals', array('id' => $id))->row_array();
    }

    function get_code()
    {
        $this->filter_by_active_farm();
        $query = $this->db->get('fattening_animals');
        $numrows =  $query->num_rows();
        return 'LSF' . sprintf('%06d', $numrows + 1);
    }

    function get_batch_code()
    {
        $this->filter_by_active_farm();
        $query = $this->db->get('animal_batch');
        $numrows =  $query->num_rows();
        return 'BAT' . sprintf('%03d', $numrows + 1);
    }

    function get_batch_for_dd()
    {
        $this->db->select('animal_batch.id, animal_batch.code');
        $this->filter_by_active_farm();  
        return  $this->db->get('animal_batch')->result_array();
    }

    /*
     * Get all animal count
     */
    function get_all_fattening_animals_count()
    {
        $this->db->where('fattening_animals.status!=',DELETED);
        $this->filter_by_active_farm();
        $query = $this->db->get('fattening_animals');
        return $query->num_rows();
    }

    function breed_by_animaltype_id($id)
    {
        $this->db->select('breed.id, breed.breed_name');
        $this->db->where('status', ACTIVE);
        $this->db->where('animal_type_id', $id);
        return  $this->db->get('breed')->result_array();
    }

    function animal_by_animaltype_id($id)
    { 
        $this->db->where('fattening_animals.status!=',DELETED);
        $this->db->select('fattening_animals.id, fattening_animals.name as fattening_animals_name');
        $this->filter_by_active_farm();
        $this->db->where('status', ACTIVE);
        $this->db->where('sex', MALE);
        $this->db->where('animal_type', $id);
        $data['male'] =  $this->db->get('fattening_animals')->result_array();

        $this->db->where('fattening_animals.status!=',DELETED);
        $this->db->select('fattening_animals.id, fattening_animals.name as fattening_animals_name');
        $this->filter_by_active_farm();
        $this->db->where('status', ACTIVE);
        $this->db->where('sex', FEMALE);
        $this->db->where('animal_type', $id);
        $data['female'] =  $this->db->get('fattening_animals')->result_array();
        return $data;
    } 

    function get_all_fattening_animals($limit, $start, $col, $dir)
    {
        $this->db->where('a.status!=',DELETED);
        $this->db->select('a.*, af.name as father_name, am.name as mother_name, breed.breed_name, animal_type.type_of_animal as type,animal_batch.code as batch_no,item_uom.symbol');
        $this->db->join('fattening_animals as af', 'af.id = a.father_id', 'left outer');
        $this->db->join('fattening_animals as am', 'am.id = a.mother_id', 'left outer');
        $this->db->join('animal_batch', 'animal_batch.id = a.batch_id');
        $this->db->join('item_uom', 'item_uom.id = a.item_uom_id','left outer');
        $this->db->join('breed', 'breed.id = a.animal_breed');
        $this->db->join('animal_type', 'animal_type.id = a.animal_type');
        $this->filter_by_active_farm('a');
        $query = $this->db->limit($limit, $start)->order_by($col, $dir)->get('fattening_animals as a');

        if ($query->num_rows() > 0) {
            return $query->result();
        } else {
            return null;
        }
    }


    function get_all_fattening_animals_vaccine_count()
    {
        $this->db->where('a.status!=',DELETED);
        $this->filter_by_active_farm('fattening_animal_vaccine');
        $this->db->join('fattening_animals AS a', 'a.id = fattening_animal_vaccine.animal_id');
        // $query = 
        $this->db->from('fattening_animal_vaccine');
        
        return $this->db->count_all_results(); 
        // $query->num_rows();
    }
    function get_all_fattening_animals_vaccine($limit, $start, $col, $dir)
    {
        $this->db->where('fattening_animals.status!=',DELETED);
        $this->db->select('fattening_animal_vaccine.*, fattening_animals.name, fattening_animals.code');
        $this->db->join('fattening_animals', 'fattening_animals.id = fattening_animal_vaccine.animal_id');
        $this->filter_by_active_farm('fattening_animal_vaccine');
        $query = $this->db->limit($limit, $start)->order_by($col, $dir)->get('fattening_animal_vaccine');

        if ($query->num_rows() > 0) {
            return $query->result();
        } else {
            return null;
        }
    }

    function get_fattening_animals_vaccine_search_count($search)
    {
        $this->db->where('fattening_animals.status!=',DELETED);
        $this->db->select('fattening_animal_vaccine.*, fattening_animals.name, fattening_animals.code');
        $this->db->join('fattening_animals', 'fattening_animals.id = fattening_animal_vaccine.animal_id');
        $this->filter_by_active_farm('fattening_animal_vaccine');

        $this->db
        ->like('fattening_animals.name', $search)
            ->or_like('fattening_animals.id', $search)
            ->or_like("DATE_FORMAT(fattening_animal_vaccine.vaccine_date,'%d %b,%Y')", $search)
            ->or_like("DATE_FORMAT(fattening_animal_vaccine.next_vaccine,'%d %b,%Y')", $search);

            $this->db->from('fattening_animal_vaccine');

            return $this->db->count_all_results();

    }
    function get_fattening_animals_vaccine_search($limit, $start, $search, $col, $dir)
    {
        $this->db->where('fattening_animals.status!=',DELETED);
        $this->db->select('fattening_animal_vaccine.*, fattening_animals.name, fattening_animals.code');
        $this->db->join('fattening_animals', 'fattening_animals.id = fattening_animal_vaccine.animal_id');
        $this->filter_by_active_farm('fattening_animal_vaccine');

        $this->db
        ->like('fattening_animals.name', $search)
            ->or_like('fattening_animals.id', $search)
            ->or_like("DATE_FORMAT(fattening_animal_vaccine.vaccine_date,'%d %b,%Y')", $search)
            ->or_like("DATE_FORMAT(fattening_animal_vaccine.next_vaccine,'%d %b,%Y')", $search)
            // ->or_like('a.dop', $search)
            // ->or_like('breed.breed_name', $search)
            // ->or_like('animal_type.type_of_animal', $search)

            ->limit($limit, $start);

        $query = $this->db->limit($limit, $start)->order_by($col, $dir)->get('fattening_animal_vaccine');

        if ($query->num_rows() > 0) {
            return $query->result();
        } else {
            return null;
        }
    }

    function get_fathers()
    {
        $this->db->select("fattening_animals.*,ROUND(DATEDIFF(CURRENT_DATE,fattening_animals.dob) / 30.4) AS age");
        $this->db->where('fattening_animals.sex', MALE);
        $this->filter_by_active_farm('fattening_animals');
        return $this->db->get('fattening_animals')->result_array();
    }

    function fattening_animals_search($limit, $start, $search, $col, $dir)
    {
        // $this->db->select('a.*, af.name as father_name, am.name as mother_name, breed.breed_name, animal_type.type_of_animal as type');
        // $this->db->join('fattening_animals as af', 'af.father_id = a.id', 'left outer');
        // $this->db->join('fattening_animals as am', 'am.mother_id = a.id', 'left outer');
        // $this->db->join('breed', 'breed.id = a.animal_breed');
        // $this->db->join('animal_type', 'animal_type.id = a.animal_type');
        // $this->filter_by_active_farm('a');
        $this->db->where('a.status!=',DELETED);
        $this->db->select('a.*, af.name as father_name, am.name as mother_name, breed.breed_name, animal_type.type_of_animal as type,animal_batch.code as batch_no,item_uom.symbol');
        $this->db->join('fattening_animals as af', 'af.id = a.father_id', 'left outer');
        $this->db->join('fattening_animals as am', 'am.id = a.mother_id', 'left outer');
        $this->db->join('animal_batch', 'animal_batch.id = a.batch_id');
        $this->db->join('item_uom', 'item_uom.id = a.item_uom_id','left outer');
        $this->db->join('breed', 'breed.id = a.animal_breed');
        $this->db->join('animal_type', 'animal_type.id = a.animal_type');
        $this->filter_by_active_farm('a');
        
        
        $query = $this
            ->db
            // ->like('a.name', $search)
            // ->or_like('a.code', $search)
            // ->or_like('a.dob', $search)
            // ->or_like('a.dop', $search)
            // ->or_like('breed.breed_name', $search)
            // ->or_like('animal_type.type_of_animal', $search)
            ->where("(a.name LIKE '%$search%' OR a.code LIKE '%$search%' OR a.dob LIKE '%$search%' OR a.dop LIKE '%$search%' OR breed.breed_name LIKE '%$search%' OR animal_type.type_of_animal LIKE '%$search%')")
            ->limit($limit, $start)
            ->order_by($col, $dir)
            ->get('fattening_animals as a');


        if ($query->num_rows() > 0) {
            return $query->result();
        } else {
            return null;
        }
    }

    function fattening_animals_search_count($search)
    {
        $this->db->where('a.status!=',DELETED);
        $this->db->select('a.*, af.name as father_name, am.name as mother_name, breed.breed_name, animal_type.type_of_animal as type');
        $this->db->join('fattening_animals as af', 'af.father_id = a.id', 'left outer');
        $this->db->join('fattening_animals as am', 'am.mother_id = a.id', 'left outer');
        $this->db->join('breed', 'breed.id = a.animal_breed');
        $this->db->join('animal_type', 'animal_type.id = a.animal_type');
        $this->filter_by_active_farm('a');
        $query = $this
            ->db
            // ->like('a.name', $search)
            // ->or_like('a.code', $search)
            // ->or_like('a.dob', $search)
            // ->or_like('a.dop', $search)
            // ->or_like('breed.breed_name', $search)
            // ->or_like('animal_type.type_of_animal', $search)
            ->where("(a.name LIKE '%$search%' OR a.code LIKE '%$search%' OR a.dob LIKE '%$search%' OR a.dop LIKE '%$search%' OR breed.breed_name LIKE '%$search%' OR animal_type.type_of_animal LIKE '%$search%')")
            ->get('fattening_animals as a');

        return $query->num_rows();
    }

    /*
     * function to add new animal
     */
    function add_fattening_animals($params)
    {
        $this->db->insert('fattening_animals', $params);
        print_r($this->db->last_query());
        return $this->db->insert_id();
    }

    /*
     * function to update animal
     */
    function update_animal($id, $params)
    {
        $this->db->where('id', $id);
        return $this->db->update('fattening_animals', $params);
    }

    /*
     * function to delete animal
     */
    function delete_animal($id)
    {
        return $this->db->delete('animal', array('id' => $id));
    }

    /*
     * function to delete fetening animal
     */
    function delete_fettening_animal($id){
        return $this->db->where(array('id' => $id))->update('fattening_animals', array('status' => DELETED));
    
        // $this->db->where('id',$id)->update('fattening_animals', array('status' => 9));
        // return $this->db->affected_rows()>0;
    }

    function get_fattening_animal_weight_count($id){
        $this->db->where('animal_id',$id)->from('fattening_animal_weight_history');
        return $this->db->count_all_results();
    }

    function get_fattening_animals_weight($limit, $start, $animal_id ,$col,$dir){
        
        $this->db->where('animal_id',$animal_id);
        
        $this->db->limit($limit, $start)
        ->order_by($col, $dir);

       

        return $this->db->get('fattening_animal_weight_history')->result();
    }

    function get_fattening_animal_weight_search_count($id,$search){
        $this->db->where('animal_id',$id)->from('fattening_animal_weight_history');

        $this->db->like('date',$search)
        ->or_like('weight',$search);

        return $this->db->count_all_results();
    }

    function get_fattening_animals_search_weight($limit, $start, $animal_id ,$search,$col,$dir){
        
        $this->db->where('animal_id',$animal_id);
        
        $this->db->limit($limit, $start)
        ->order_by($col, $dir);

        $this->db->like('date',$search)
        ->or_like('weight',$search);

        return $this->db->get('fattening_animal_weight_history')->result();
    }

    // vaccination

    function get_fattening_animal_vaccine_count($id){
        $this->db->where('animal_id',$id)->from('fattening_animal_vaccine');
        return $this->db->count_all_results();
    }

    function get_fattening_animals_vaccine($limit, $start, $animal_id ,$col,$dir){
        
        $this->db->where('animal_id',$animal_id)
        ->select('fattening_animal_vaccine.id,product.product_name AS vaccine,fattening_animal_vaccine.vaccine_date,fattening_animal_vaccine.next_vaccine,fattening_animal_vaccine.next_taken')
        ->join('product','fattening_animal_vaccine.vaccine_id=product.id');
        
        $this->db->limit($limit, $start)
        ->order_by($col, $dir);

        return $this->db->get('fattening_animal_vaccine')->result();
    }

    function get_fattening_animal_vaccine_search_count($id,$search){
        $this->db->where('animal_id',$id)->from('fattening_animal_vaccine');

        $this->db->where('animal_id',$id)
        ->select('fattening_animal_vaccine.id,product.product_name AS vaccine,fattening_animal_vaccine.vaccine_date,fattening_animal_vaccine.next_vaccine,fattening_animal_vaccine.next_taken')
        ->join('product','fattening_animal_vaccine.vaccine_id=product.id');

        $this->db->where("( ('vaccine_date' LIKE '%$search%') OR (product.product_name LIKE '%$search%') OR (next_vaccine LIKE '%$search%') )");

        // $this->db->like('vaccine_date',$search)
        // ->or_like('product.product_name',$search);
        // ->or_like('next_vaccine',$search);

        return $this->db->count_all_results();
    }

    function get_fattening_animals_weight_diff($animal_id){
      
        $d = $this->db->query("SELECT (
            ( SELECT weight FROM fattening_animal_weight_history WHERE animal_id=$animal_id ORDER BY fattening_animal_weight_history.date DESC LIMIT 1 ) -
            ( SELECT weight FROM fattening_animal_weight_history WHERE animal_id=$animal_id ORDER BY fattening_animal_weight_history.date ASC LIMIT 1  )
        ) AS diff ")->row()->diff;
        
        return ($d) ? "$d (Kg)" : 'Not Weighted Yet';
    }

    function get_fattening_animals_search_vaccine($limit, $start, $animal_id ,$search,$col,$dir){
        
        $this->db->where('animal_id',$animal_id);
        
        $this->db->where('animal_id',$animal_id)
        ->select('fattening_animal_vaccine.id,product.product_name AS vaccine,fattening_animal_vaccine.vaccine_date,fattening_animal_vaccine.next_vaccine,fattening_animal_vaccine.next_taken')
        ->join('product','fattening_animal_vaccine.vaccine_id=product.id');

        $this->db->limit($limit, $start)
        ->order_by($col, $dir);

        $this->db->where("( ('vaccine_date' LIKE '%$search%') OR (product.product_name LIKE '%$search%') OR (next_vaccine LIKE '%$search%') )");
        // ->or_like('product.product_name',$search);
        // ->or_like('next_vaccine',$search);

        return $this->db->get('fattening_animal_vaccine')->result();
    }

    public function get_fattening_animal($id)
    {
        $fattening_animal = $this->db->where('fattening_animals.id',$id)
        ->select("fattening_animals.*,DATE_FORMAT(fattening_animals.dob,'%d %b,%Y') AS preety_dob,DATE_FORMAT(fattening_animals.dop,'%d %b,%Y') AS preety_dop,,animal_batch.code AS batch_code,breed.breed_name,animal_type.type_of_animal")
        ->join('animal_batch','fattening_animals.batch_id=animal_batch.id')
        ->join('fattening_animals as af', 'af.id = fattening_animals.father_id', 'left outer')
        ->join('fattening_animals as am', 'am.id = fattening_animals.mother_id', 'left outer')
        ->join('breed', 'breed.id = fattening_animals.animal_breed')
        ->join('animal_type', 'animal_type.id = fattening_animals.animal_type')
        ->get('fattening_animals')
        ->row();

        if ($fattening_animal) {
            $breeds = $this->db->where('breed.animal_type_id',$fattening_animal->animal_type)
            ->get('breed')
            ->result_array();
            $fattening_animal->breeds='';
            foreach ($breeds as $key => $breed) {
                $fattening_animal->breeds .= "<option value='{$breed['id']}'>{$breed['breed_name']}</option>";
            }


            // Fathers
            $fattening_animal->fathers = '';
            $fathers = $this->db->where(['fattening_animals.animal_type'=>$fattening_animal->animal_type,'sex'=>MALE])
            ->get('fattening_animals')
            ->result_array();
            foreach ($fathers as $key => $father) {
                $fattening_animal->fathers = "<option value='{$father['id']}'>{$father['name']}</option>";
            }
            // Mothers
            $fattening_animal->mothers = '';
            $mothers = $this->db->where(['fattening_animals.animal_type'=>$fattening_animal->animal_type,'sex'=>FEMALE])
            ->get('fattening_animals')
            ->result_array();
            foreach ($mothers as $key => $mother) {
                $fattening_animal->mothers = "<option value='{$mother['id']}'>{$mother['name']}</option>";
            }

        }


        return $fattening_animal;

    }
    
}
