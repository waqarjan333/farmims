<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Farm_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();

        // Select All Query
        // $this->db->get('country')->result_array();
    }

    /*
     * Get brand by id
     */
    // function get_farm($id)
    // {
    //     return $this->db->get_where('brand', array('id' => $id))->row_array();
    // }

    function get_code()
    {
        $this->filter_by_active_farm();
        $query = $this->db->get('farm');
        $numrows =  $query->num_rows();
        return 'FM'.sprintf('%06d', $numrows); //it will provide latest or last record id.
    }

    /*
     * Get all brand count
     */
    function get_all_farm_count()
    {
        $query = $this->db->get('farm');
        return $query->num_rows();
    }

    // function province_by_country_id($id){
    //     $this->db->select('province.id, province.name as province_name');
    //     $this->db->where('status', ACTIVE);
    //     $this->db->where('country_id', $id);
    //     return $this->db->get('province')->result_array();
    // }
    /*
     * Get all brand
     */


    function get_all_farm($limit, $start, $col, $dir)
    {
        $this->db->select('farm.*, province.name as province_name,city.name as city_name,area_uom.name as uom_name,currency.name as currency_name');
        $this->db->join('province', 'province.id = farm.province_id', 'left outer');
        $this->db->join('city', 'city.id = farm.city_id', 'left outer');
        $this->db->join('area_uom', 'area_uom.id = farm.uom_id', 'left outer');
        $this->db->join('currency', 'currency.id = farm.currency_id', 'left outer');
        $query = $this->db->limit($limit, $start)->order_by($col, $dir)->get('farm');

        if ($query->num_rows() > 0) {
            return $query->result();
        } else {
            return null;
        }
    }

    function farm_search($limit, $start, $search, $col, $dir)
    {
        $this->db->select('farm.*, province.name as province_name,city.name as city_name,area_uom.name as uom_name,currency.name as currency_name');
        $this->db->join('province', 'province.id = farm.province_id', 'left outer');
        $this->db->join('city', 'city.id = farm.city_id', 'left outer');
        $this->db->join('area_uom', 'area_uom.id = farm.uom_id', 'left outer');
        $this->db->join('currency', 'currency.id = farm.currency_id', 'left outer');
        $query = $this->db->like('farm.title', $search)->limit($limit, $start)->order_by($col, $dir)->get('farm');

        // $query = $this
        //     ->db
        //     ->like('farm.title', $search)
        //     ->limit($limit, $start)
        //     ->order_by($col, $dir)
        //     ->get('farm');


        if ($query->num_rows() > 0) {
            return $query->result();
        } else {
            return null;
        }
    }

    function farm_search_count($search)
    {

        $query = $this
            ->db
            ->like('farm.title', $search)

            ->get('farm');

        return $query->num_rows();
    }

    /*
     * function to add new brand
     */
    function add_farm($params)
    {
        $this->db->insert('farm', $params);
        return $this->db->insert_id();
    }

    /*  
     * function to update brand
     */
    function update_farm($id, $params)
    {
        $this->db->where('id', $id);
        return $this->db->update('farm', $params);
    }

    /*
     * function to delete brand
     */
    function delete_farm($id)
    {
        return $this->db->where('id',$id)->update('farm', array('status' => DELETED));
    }

    function get_farm($id){
        return $this->db->where('farm.id',$id)
        ->select('farm.*,province.name AS province_name,city.name AS city_name')
        ->join('province', 'province.id = farm.province_id', 'left outer')
        ->join('city', 'city.id = farm.city_id', 'left outer')
        ->get('farm')
        ->row();
    }

}
