<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Expense_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }

    /*
     * Get expense by id
     */
    function get_expense($id)
    {
        $this->db->where('expense.status!=',DELETED);
        $this->filter_by_active_farm('expense');
        return $this->db->get_where('expense', array('id' => $id))->row_array();
    }

    /*
     * Get all expense count
     */
    function get_all_expense_count()
    {
        $this->db->where('expense.status!=',DELETED);
        $this->filter_by_active_farm('expense');
        $query = $this->db->get('expense');
        return $query->num_rows();
    }

    function get_all_expense_for_dd()
    {
        $this->db->where('expense.status!=',DELETED);
        $this->db->select('expense.id, expense.expense_name as expense_name');
        $this->filter_by_active_farm('expense');
        $this->db->where('status', ACTIVE);
        return $this->db->get('expense')->result_array();
    }
    /*
     * Get all expense
     */
    function get_all_expense($limit, $start, $col, $dir)
    {
        $this->db->where('expense.status!=',DELETED);
        $this->db->select('expense.*, expense_category.name as expense_category');
        $this->db->join('expense_category', 'expense_category.id = expense.expense_cat_id');
        $this->filter_by_active_farm('expense');
        $query = $this->db->limit($limit, $start)->order_by($col, $dir)->get('expense');

        if ($query->num_rows() > 0) {
            return $query->result();
        } else {
            return null;
        }
    }

    function expense_search($limit, $start, $search, $col, $dir)
    {

        $this->db->where('expense.status!=',DELETED);
        $this->db->select('expense.*, expense_category.name as expense_category');
        $this->db->join('expense_category', 'expense_category.id = expense.expense_cat_id');
        $this->filter_by_active_farm('expense');

        $query = $this
            ->db
            // ->like('expense.name', $search)
            // ->or_like('expense_category.name', $search)
            ->where("(expense.name LIKE '%$search%' OR expense_category.name LIKE '%$search%')")
            ->limit($limit, $start)
            ->order_by($col, $dir)
            ->get('expense');

        if ($query->num_rows() > 0) {
            return $query->result();
        } else {
            return null;
        }
    }

    function expense_search_count($search)
    {
        $this->db->where('expense.status!=',DELETED);
        $this->db->select('expense.*, expense_category.name as expense_category');
        $this->db->join('expense_category', 'expense_category.id = expense.expense_cat_id');
        $this->filter_by_active_farm('expense');

        $query = $this
            ->db
            // ->like('expense.name', $search)
            // ->or_like('expense_category.name', $search)
            ->where("(expense.name LIKE '%$search%' OR expense_category.name LIKE '%$search%')")
            ->get('expense');

        return $query->num_rows();
    }

    /*
     * function to add new expense
     */
    function add_expense($params)
    {
        $this->db->insert('expense', $params);
        return $this->db->insert_id();
    }
    function add_land_expense($params)
    {
        $this->db->insert('land_expense', $params);
        return $this->db->insert_id();
    }

    /*
     * function to update expense
     */
    function update_expense($id, $params)
    {
        $this->db->where('id', $id);
        return $this->db->update('expense', $params);
    }

    /*
     * function to delete expense
     */

    function delete_expense($id){
        return $this->db->where('id',$id)
        ->update('expense',['expense.status'=>DELETED]);
    }
      function delete_land_expense($id){
        return $this->db->where('id',$id)
        ->update('land_expense',['land_expense.status'=>DELETED]);
    }

    function update_status($id,$params){
        return $this->db->where('id',$id)
        ->update('land_expense',$params);
    }


    function get_all_land_expense_count()
    {
        $this->db->where('land_expense.status!=',DELETED);
        $this->filter_by_active_farm('land_expense');
        $query = $this->db->get('land_expense');
        return $query->num_rows();
    }

    function get_all_land_expense($limit, $start, $col, $dir)
    {
        $this->db->where('land_expense.status!=',DELETED);
        $this->db->select('land_expense.*, expense_category.name as expense_category,land_management.land_management_data AS land_type, landbatch.batch_no AS batch_no, landarea.area_no AS area_no,landbatch.invoice_no AS invoice');
        $this->db->join('expense_category', 'expense_category.id = land_expense.expense_cat_id');
        $this->db->join('land_management_data land_management', 'land_management.id = land_expense.land_type');
        $this->db->join('land_batch landbatch', 'landbatch.id = land_expense.land_batch_no');
        $this->db->join('land_batch landarea', 'landarea.id = land_expense.land_area_no');
        $this->filter_by_active_farm('land_expense');
        $query = $this->db->limit($limit, $start)->order_by($col, $dir)->get('land_expense');

        if ($query->num_rows() > 0) {
            return $query->result();
        } else {
            return null;
        }
    }


        function land_expense_search($limit, $start, $search, $col, $dir)
    {

        $this->db->where('land_expense.status!=',DELETED);
        $this->db->select('land_expense.*, expense_category.name as expense_category');
        $this->db->join('expense_category', 'expense_category.id = land_expense.expense_cat_id');
        $this->filter_by_active_farm('land_expense');

        $query = $this
            ->db
            // ->like('land_expense.name', $search)
            // ->or_like('expense_category.name', $search)
            ->where("(land_expense.name LIKE '%$search%' OR expense_category.name LIKE '%$search%')")
            ->limit($limit, $start)
            ->order_by($col, $dir)
            ->get('land_expense');

        if ($query->num_rows() > 0) {
            return $query->result();
        } else {
            return null;
        }
    }

    function land_expense_search_count($search)
    {
        $this->db->where('land_expense.status!=',DELETED);
        $this->db->select('land_expense.*, expense_category.name as expense_category');
        $this->db->join('expense_category', 'expense_category.id = land_expense.expense_cat_id');
        $this->filter_by_active_farm('land_expense');

        $query = $this
            ->db
            // ->like('land_expense.name', $search)
            // ->or_like('expense_category.name', $search)
            ->where("(land_expense.name LIKE '%$search%' OR expense_category.name LIKE '%$search%')")
            ->get('land_expense');

        return $query->num_rows();
    }

    function get_landexpense_data($id)
    {
                 // $this->filter_by_active_farm();
        $this->db->where('land_expense.status!=', DELETED);
        $this->db->where('land_expense.id=', $id);
        $this->db->select('land_expense.*, land_batch.invoice_no AS invoice');
        $this->db->join('land_batch', 'land_batch.id = land_expense.land_batch_no');
        $query = $this->db->get('land_expense');

        if ($query->num_rows() > 0) {
            return $query->row();
        } else {
            return null;
        }
    }

    function update_landExpense($id,$params)
    {
         return $this->db->where('id',$id)
        ->update('land_expense',$params);
    }

}
