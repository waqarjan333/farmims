<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Sale_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }

    /*
     * Get animal by id
     */
    function get_so_details($id)
    {
        $this->db->select('sale_orders.*, parties.partie_name as party_name,parties.partie_phone as phone_no');
        $this->db->join('parties', 'parties.id = sale_orders.customer_id');
        $this->filter_by_active_farm('sale_orders');
        $data = $this->db->get_where('sale_orders', array('sale_orders.id' => $id))->row();
        $data->so_details = $this->db->get_where('so_details', array('so_id' => $data->id))->result();
        return $data;
    }

    /*
     * Get all animal count
     */
    function get_all_so_count()
    {
        $this->filter_by_active_farm();
        $query = $this->db->get('sale_orders');
        return $query->num_rows();
    }

    /*
     * Get all animal
     */
    function get_all_so($limit, $start, $col, $dir)
    {
        $this->db->select('sale_orders.*, parties.partie_name as party_name,parties.partie_code as party_code');
        $this->db->join('parties', 'parties.id = sale_orders.customer_id');
        $this->filter_by_active_farm('sale_orders');
        $query = $this->db->limit($limit, $start)->order_by($col, $dir)->get('sale_orders');

        if ($query->num_rows() > 0) {
            return $query->result();
        } else {
            return null;
        }
    }
    function get_all_sos_dd()
    {
        $this->filter_by_active_farm('sale_orders');
        return $this->db->get('sale_orders')->result_array();
    }

    function get_all_invoices_dd()
    {
        $this->filter_by_active_farm('sale_invoices');
        return $this->db->get('sale_invoices')->result_array();
    }

    function so_search($limit, $start, $search, $col, $dir)
    {
        $this->db->select('sale_orders.*, parties.partie_name as party_name,parties.partie_code as party_code');
        $this->db->join('parties', 'parties.id = sale_orders.customer_id');
        $this->filter_by_active_farm('sale_orders');
        $query = $this
            ->db
            ->like('sale_orders.order_no', $search)
            ->or_like('sale_orders.date', $search)
            ->or_like('sale_orders.net_tot', $search)
            ->or_like('parties.partie_name', $search)
            ->or_like('parties.partie_code', $search)
            ->limit($limit, $start)
            ->order_by($col, $dir)
            ->get('sale_orders');


        if ($query->num_rows() > 0) {
            return $query->result();
        } else {
            return null;
        }
    }

    function so_search_count($search)
    {
        $this->db->select('sale_orders.*, parties.partie_name as party_name,parties.partie_code as party_code');
        $this->db->join('parties', 'parties.id = sale_orders.customer_id');
        $this->filter_by_active_farm('sale_orders');
        $query = $this
            ->db
            ->like('sale_orders.order_no', $search)
            ->or_like('sale_orders.date', $search)
            ->or_like('sale_orders.net_tot', $search)
            ->or_like('parties.partie_name', $search)
            ->or_like('parties.partie_code', $search)

            ->get('sale_orders');

        return $query->num_rows();
    }




    function get_all_si_count()
    {
        $this->filter_by_active_farm();
        $query = $this->db->get('sale_invoices');
        return $query->num_rows();
    }

    function get_all_si($limit, $start, $col, $dir)
    {
        $this->db->select('sale_invoices.*, sale_orders.customer_id, sale_orders.order_no, parties.partie_name as party_name,parties.partie_code as party_code');
        $this->db->join('sale_orders', 'sale_orders.id = sale_invoices.so_id');
        $this->db->join('parties', 'parties.id = sale_orders.customer_id');
        $this->filter_by_active_farm('sale_invoices');
        $query = $this->db->limit($limit, $start)->order_by($col, $dir)->get('sale_invoices');

        if ($query->num_rows() > 0) {
            return $query->result();
        } else {
            return null;
        }
    }

    function get_all_rv_count()
    {
        $this->filter_by_active_farm();
        $query = $this->db->get('recipt_voucher');
        return $query->num_rows();
    }

    function get_all_rv($limit, $start, $col, $dir)
    {
        $this->db->select('recipt_voucher.*, sale_invoices.invoice_no, sale_invoices.net_tot, parties.partie_name as party_name,parties.partie_code as party_code');
        $this->db->join('sale_invoices', 'sale_invoices.id = recipt_voucher.si_id');
        $this->db->join('parties', 'parties.id = recipt_voucher.customer_id');
        $this->filter_by_active_farm('recipt_voucher');
        $query = $this->db->limit($limit, $start)->order_by($col, $dir)->get('recipt_voucher');

        if ($query->num_rows() > 0) {
            return $query->result();
        } else {
            return null;
        }
    }

    function get_rv_search_count($search)
    {
        $this->db->select('recipt_voucher.*, sale_invoices.invoice_no, sale_invoices.net_tot, parties.partie_name as party_name,parties.partie_code as party_code');
        $this->db->join('sale_invoices', 'sale_invoices.id = recipt_voucher.si_id');
        $this->db->join('parties', 'parties.id = recipt_voucher.customer_id');
        $this->filter_by_active_farm('recipt_voucher');
        $this
        ->db
        ->like('recipt_voucher.date', $search)
        ->or_like('recipt_voucher.amount', $search)
        ->or_like('parties.partie_name', $search)
        ->or_like('parties.partie_code', $search);
        $this->db->from('recipt_voucher');
        return $this->db->count_all_results();
    }

    function get_rv_search($limit, $start, $search ,$col, $dir)
    {
        $this->db->select('recipt_voucher.*, sale_invoices.invoice_no, sale_invoices.net_tot, parties.partie_name as party_name,parties.partie_code as party_code');
        $this->db->join('sale_invoices', 'sale_invoices.id = recipt_voucher.si_id');
        $this->db->join('parties', 'parties.id = recipt_voucher.customer_id');
        $this->filter_by_active_farm('recipt_voucher');
        
        $this
            ->db
            ->like('recipt_voucher.date', $search)
            ->or_like('recipt_voucher.amount', $search)
            ->or_like('parties.partie_name', $search)
            ->or_like('parties.partie_code', $search);
            
        $query = $this->db->limit($limit, $start)->order_by($col, $dir)->get('recipt_voucher');

        if ($query->num_rows() > 0) {
            return $query->result();
        } else {
            return null;
        }
    }


    function pi_search($limit, $start, $search, $col, $dir)
    {
        $this->db->select('sale_invoices.*, sale_orders.customer_id, sale_orders.order_no, parties.partie_name as party_name,parties.partie_code as party_code');
        $this->db->join('sale_orders', 'sale_orders.id = sale_invoices.so_id');
        $this->db->join('parties', 'parties.id = sale_orders.customer_id');
        $this->filter_by_active_farm('sale_invoices');
        $query = $this
            ->db
            ->like('sale_invoices.invoice_no', $search)
            ->like('sale_orders.order_no', $search)
            ->or_like('sale_invoices.date', $search)
            ->or_like('sale_invoices.net_tot', $search)
            ->or_like('parties.partie_name', $search)
            ->or_like('parties.partie_code', $search)
            ->limit($limit, $start)
            ->order_by($col, $dir)
            ->get('sale_invoices');


        if ($query->num_rows() > 0) {
            return $query->result();
        } else {
            return null;
        }
    }

    function pi_search_count($search)
    {
        $this->db->select('sale_invoices.*, sale_orders.customer_id, sale_orders.order_no, parties.partie_name as party_name,parties.partie_code as party_code');
        $this->db->join('sale_orders', 'sale_orders.id = sale_invoices.so_id');
        $this->db->join('parties', 'parties.id = sale_orders.customer_id');
        $this->filter_by_active_farm('sale_invoices');
        $query = $this
            ->db
            ->like('sale_invoices.invoice_no', $search)
            ->like('sale_orders.order_no', $search)
            ->or_like('sale_invoices.date', $search)
            ->or_like('sale_invoices.net_tot', $search)
            ->or_like('parties.partie_name', $search)
            ->or_like('parties.partie_code', $search)

            ->get('sale_invoices');

        return $query->num_rows();
    }


    /*
     * function to add new animal
     */
    function add_animals($params)
    {
        $this->db->insert('animals', $params);
        return $this->db->insert_id();
    }

    /*
     * function to update animal
     */
    function update_animal($id, $params)
    {
        $this->db->where('id', $id);
        return $this->db->update('animals   ', $params);
    }

    /*
     * function to delete animal
     */
    function delete_animal($id)
    {
        return $this->db->delete('animal', array('id' => $id));
    }
}
