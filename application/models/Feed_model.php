<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Feed_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();

        // Select All Query
        // $this->db->get('country')->result_array();
    }

    function get_code()
    {
        $this->filter_by_active_farm();
        $query = $this->db->get('feed');
        $numrows =  $query->num_rows();
        return sprintf('%06d', $numrows + 1);
    }

    function get_mixture_items_for_dd(){
        $this->db->where('processed', FEED_RAW);
        $this->filter_by_active_farm();
        return $this->db->get('feed')->result_array();
    }

    /*
     * Get feed by id
     */
    function get_feed($id)
    {
        return $this->db->get_where('feed', array('id' => $id))->row_array();
    }

    /*
     * Get all feed count
     */
    function get_all_feed_count()
    { 
        $this->db->where('feed.status!=',DELETED);
        $this->filter_by_active_farm('feed');
        $query = $this->db->get('feed'); 
        return $query->num_rows();
    }
 
    /*
     * Get all feed
     */
    function get_all_feed($limit, $start, $col, $dir)
    {
        $this->db->where('feed.status!=',DELETED);
        $this->db->select('feed.*, feed_category.name as category_name');
        $this->db->join('feed_category','feed_category.id = feed.feed_id');
        $this->filter_by_active_farm('feed');
        $query = $this->db->limit($limit, $start)->order_by($col, $dir)->get('feed'); 

        if ($query->num_rows() > 0) {
            return $query->result();
        } else {
            return null;
        }
    }

    function get_feed_for_dd(){
        $this->db->where('feed.status!=',DELETED);
        $this->db->select('feed.id, feed.feed_code');
        $this->filter_by_active_farm('feed');
        $this->db->where('feed.qty >', 0);
        return $this->db->get('feed')->result_array();
    }

    function feed_search($limit,$start,$search,$col,$dir)
    {
        $this->db->where('feed.status!=',DELETED);
        $this->db->select('feed.*, feed_category.name as category_name');
        $this->db->join('feed_category','feed_category.id = feed.feed_id');
        $this->filter_by_active_farm('feed');
        $query = $this
                ->db
                // ->like('feed.feed_code',$search)
                // ->or_like('feed.crop_date',$search)
                ->where("(feed.crop_date LIKE '%$search%' OR feed.feed_code LIKE '%$search%' OR feed.qty LIKE '%$search%' OR feed_category.name LIKE '%$search%' )")
                // ->or_like('feed.formula_formation',$search)
                // ->or_like('feed.avg',$search)
                // ->or_like('feed.qty',$search)
                // ->or_like('feed_category.name',$search)
                ->limit($limit,$start)
                ->order_by($col,$dir)
                ->get('feed');
        
       
        if($query->num_rows()>0)
        {
            return $query->result();  
        }
        else
        {
            return null;
        }
    }

    function feed_search_count($search)
    {
        $this->db->where('feed.status!=',DELETED);
        $this->db->select('feed.*, feed_category.name as category_name');
        $this->db->join('feed_category','feed_category.id = feed.feed_id');
        $this->filter_by_active_farm('feed');
        $query = $this
                ->db
                ->where("(feed.crop_date LIKE '%$search%' OR feed.feed_code LIKE '%$search%' OR feed.qty LIKE '%$search%' OR feed_category.name LIKE '%$search%' )")
                // ->like('feed.feed_code',$search)
                // ->or_like('feed.crop_date',$search)
                // ->or_like('feed.formula_formation',$search)
                // ->or_like('feed.avg',$search)
                // ->or_like('feed.qty',$search)
                // ->or_like('feed_category.name',$search) 
                ->get('feed');
    
        return $query->num_rows();
    } 

    /*
     * function to add new feed
     */
    function add_feed($params)
    {
        $this->db->insert('feed', $params);
        return $this->db->insert_id();
    }

    /*
     * function to update feed
     */
    function update_feed($id, $params)
    {
        $this->db->where('id', $id);
        return $this->db->update('feed', $params);
    }

    /*
     * function to delete feed
     */
    function delete_feed($id)
    {
        $feed = $this->db->where(array('id' => $id))->update('feed',['status'=>DELETED]);
    
        // if ($feed) {
        //     $feed->uoms = '';

        //     // $uoms = $this->db->where('area_uom.id',$feed->feed_id)
        //     // ->get('feed_category')
        //     // ->result_array();

        //     // foreach ($uoms as $key => $uom) {
        //     //     $feed->uoms .= "<option value='{$uom->id}'>{$uom->name}</option>";
        //     // }

        // }

        return $feed;
    }
}
